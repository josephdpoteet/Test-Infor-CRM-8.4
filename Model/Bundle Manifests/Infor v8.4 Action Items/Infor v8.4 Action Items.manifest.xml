<?xml version="1.0"?>
<BundleManifest id="28ad109d-bbe3-4db5-a62e-493cbe2a0082">
  <bundleProperties>
    <name>Infor v8.4 Action Items</name>
    <description><![CDATA[]]></description>
    <address><![CDATA[]]></address>
    <company>Infor</company>
    <copyright><![CDATA[]]></copyright>
    <majorVersion>8</majorVersion>
    <minorVersion>4</minorVersion>
    <revision>0</revision>
    <build>1</build>
    <autoIncrement>false</autoIncrement>
    <installDate>2018-01-18T21:04:48.0177477Z</installDate>
    <installPassword />
    <formatVersion>8.4.0.1</formatVersion>
  </bundleProperties>
  <bundleItemHierarchy>
    <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.Platform.BundleModel.BundleManifestItem, Sage.Platform.BundleModel">
      <BundleManifestItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <ItemId>28ad109d-bbe3-4db5-a62e-493cbe2a0082</ItemId>
        <Url>\</Url>
        <BundleItemType>Container</BundleItemType>
        <Caption>Infor v8.4 Action Items</Caption>
      </BundleManifestItem>
    </bundleItem>
  </bundleItemHierarchy>
  <bundleActionHierarchy>
    <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.Platform.BundleModel.RootBundleAction, Sage.Platform.BundleModel">
      <RootBundleAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <ItemId>\Actions</ItemId>
        <Url>\Actions</Url>
        <BundleItemType>Container</BundleItemType>
        <Caption>Bundle Actions</Caption>
      </RootBundleAction>
      <children>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_e23fcee5-d3cc-4cf1-b3a1-4b27f75da1d8_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_e23fcee5-d3cc-4cf1-b3a1-4b27f75da1d8_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:SECTABLEDEFS (All)</Caption>
            <ActionData>
              <ActionId>e23fcee5-d3cc-4cf1-b3a1-4b27f75da1d8</ActionId>
              <ActionTitle>SECTABLEDEFS</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.SECTABLEDEFS SET DATETIMETYPE = 'D' WHERE TABLENAME = 'PERIOD' AND FIELDNAME IN ('EFFECTIVEFROM','EXPIRESAFTER')</Statement>
                  <Title>Updated the DateTimeType field</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_3fd6967f-2829-4ebc-a847-4fddaa8cae7b_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_3fd6967f-2829-4ebc-a847-4fddaa8cae7b_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:FixAttendeeRolePicklist (Oracle)</Caption>
            <ActionData>
              <ActionId>3fd6967f-2829-4ebc-a847-4fddaa8cae7b</ActionId>
              <ActionTitle>FixAttendeeRolePicklist</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE PICKLIST SET ITEMID = 'kSYSF0000424' WHERE ITEMID='kSYST0000424' AND PICKLISTID = 'kSYST0000420'</Statement>
                  <Title>Fix_ListenerPicklistItem</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>UPDATE PICKLIST SET ITEMID = 'kSYSF0000425' WHERE ITEMID='kSYST0000425' AND PICKLISTID = 'kSYST0000420'</Statement>
                  <Title>Fix_RecorderPicklistItem</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_cf74761e-4d5b-4d43-a314-469d03c221a1_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_cf74761e-4d5b-4d43-a314-469d03c221a1_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:AttendeeRemoteSync (All)</Caption>
            <ActionData>
              <ActionId>cf74761e-4d5b-4d43-a314-469d03c221a1</ActionId>
              <ActionTitle>AttendeeRemoteSync</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE RESYNCTABLEDEFS SET OMNIDIRECTIONAL = 'T' WHERE TABLENAME='ACTIVITYATTENDEE'</Statement>
                  <Title>ActivityAttendeeScript</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.RESYNCTABLEDEFS SET OMNIDIRECTIONAL = 'T' WHERE TABLENAME='HISTORYATTENDEE'</Statement>
                  <Title>HistoryAttendeeScript</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\CUSTOMSETTINGS_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\CUSTOMSETTINGS_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into CUSTOMSETTINGS</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>CATEGORY</string>
              <string>DESCRIPTION</string>
              <string>VERSIONNUMBER</string>
              <string>DATATYPE</string>
              <string>DATAVALIDATION</string>
              <string>DATAVALUE</string>
              <string>SECCODEID</string>
            </SelectedColumns>
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>CUSTOMSETTINGS</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>CUSTOMSETTINGSID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5ccef18c-9a18-4fc3-816d-51de936a16a62_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5ccef18c-9a18-4fc3-816d-51de936a16a62_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CustomSetting (All)</Caption>
            <ActionData>
              <ActionId>5ccef18c-9a18-4fc3-816d-51de936a16a62</ActionId>
              <ActionTitle>CustomSetting</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE CUSTOMSETTINGS SET CATEGORY='Exchange Rate Services' WHERE CATEGORY='Download Exchange Rates'</Statement>
                  <Title>UpdateCustomSettingCategory</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000IP.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000IP.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Workflow Status]</Caption>
            <PickListId>kDEMOA0000IP</PickListId>
            <PickListName>Workflow Status</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddSecuredActionsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddSecuredActionsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddSecuredActions\SecAc129707d2-7bb7-4c3d-8235-ff3bfcc980ce.xml</ItemId>
            <Url>\Actions\AddSecuredActions\SecAc129707d2-7bb7-4c3d-8235-ff3bfcc980ce.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Secured Action(s)</Caption>
            <ActionData>
              <SecuredActions>
                <SecuredActionBundleItem>
                  <Name>Entities/Quote/GetOrderTotal</Name>
                  <Description>Allows a user to request a quote total from the pricing service.</Description>
                  <Parent>Entities/Quote</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Quote/RePriceQuote</Name>
                  <Description>Allows a user to request a refresh of pricing information on the quote.</Description>
                  <Parent>Entities/Quote</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/SalesOrder/GetOrderTotal</Name>
                  <Description>Allows a user to request an order total from the pricing service.</Description>
                  <Parent>Entities/SalesOrder</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/SalesOrder/RePriceOrder</Name>
                  <Description>Allows a user to request a refresh of pricing information on the order.</Description>
                  <Parent>Entities/SalesOrder</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/Promote</Name>
                  <Description>Allows a user to promote and opportunity.</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/InitiateWorkflow</Name>
                  <Description>Request Workflow for approval.</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/CancelIONWorkflow</Name>
                  <Description>Cancel the ongoing IONWorkflow.</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/ConvertToQuote</Name>
                  <Description>Allows a user to convert opportunity to quote.</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Lead/InitiateWorkflow</Name>
                  <Description>Request Workflow for approval.</Description>
                  <Parent>Entities/Lead</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Lead/CancelIONWorkflow</Name>
                  <Description>Cancel the ongoing IONWorkflow.</Description>
                  <Parent>Entities/Lead</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/SalesOrder/InitiateWorkflow</Name>
                  <Description>Request Workflow for approval.</Description>
                  <Parent>Entities/SalesOrder</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/SalesOrder/CancelIONWorkflow</Name>
                  <Description>Cancel the ongoing IONWorkflow.</Description>
                  <Parent>Entities/SalesOrder</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/User/Promote</Name>
                  <Description>Allows a user to promote an users.</Description>
                  <Parent>Entities/User</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Role/Promote</Name>
                  <Description>Allows a user to promote an roles.</Description>
                  <Parent>Entities/Role</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Administration/GroupManager/Groups/ToggleUserDefault</Name>
                  <Description>Allows the user to enable or disable the New User Default setting on a Group.</Description>
                  <Parent>Administration/GroupManager/Groups</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/JobManager/ViewAllExecutions</Name>
                  <Description>Allows for the access to view all job executions.</Description>
                  <Parent>Entities/JobManager</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/JobManager/ViewAllTriggers</Name>
                  <Description>Allows for the access to view all job triggers.</Description>
                  <Parent>Entities/JobManager</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Quote/InitiateWorkflow</Name>
                  <Description>Request Workflow for approval.</Description>
                  <Parent>Entities/Quote</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Quote/CancelIONWorkflow</Name>
                  <Description>Cancel the ongoing IONWorkflow.</Description>
                  <Parent>Entities/Quote</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/ExchangeRate/View</Name>
                  <Description>Allows access to Exchange Rate entity.</Description>
                  <Parent>Entities/ExchangeRate</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/RePriceOpportunity</Name>
                  <Description>Allows a user to request a refresh of pricing information on the opportunity.</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Period/DatedExchangeRate/View</Name>
                  <Description>Allows access to Dated Exchange Rate entity</Description>
                  <Parent>Entities/Period</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Period/ModifyPeriod</Name>
                  <Description>Allows user to modify Dated Exchange Rate periods</Description>
                  <Parent>Entities/Period</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/MarketoLeads/View</Name>
                  <Description>Ability to view Marketo Leads</Description>
                  <Parent>Entities/MarketoLeads</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/MarketoSessionLog/View</Name>
                  <Description>Ability to view the marketo session logs in administration</Description>
                  <Parent>Entities/MarketoSessionLog</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Account/PromoteToMarketo</Name>
                  <Description>Allow promotion of an account to Marketo</Description>
                  <Parent>Entities/Account</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Account/DeleteFromMarketo</Name>
                  <Description>Allow deletion of promoted Marketo account</Description>
                  <Parent>Entities/Account</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/PromoteToMarketo</Name>
                  <Description>Allows promotion of an Opportunity to Marketo</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Opportunity/DeleteFromMarketo</Name>
                  <Description>Allows for the deletion of a Marketo Opportunity</Description>
                  <Parent>Entities/Opportunity</Parent>
                </SecuredActionBundleItem>
              </SecuredActions>
              <ActionId>129707d2-7bb7-4c3d-8235-ff3bfcc980ce</ActionId>
              <ReplaceList>false</ReplaceList>
            </ActionData>
          </AddSecuredActionsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014S.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014S.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:SData Feed (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014S</PluginId>
            <Name>SData Feed</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014T.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014T.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] BODMAPPING:CustomBODMappings (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014T</PluginId>
            <Name>CustomBODMappings</Name>
            <Family>BODMAPPING</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014U.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014U.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] BODMAPPING:StandardBODMappings (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014U</PluginId>
            <Name>StandardBODMappings</Name>
            <Family>BODMAPPING</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014V.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014V.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] BODMAPPING:InactiveBODMappings (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014V</PluginId>
            <Name>InactiveBODMappings</Name>
            <Family>BODMAPPING</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014W.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014W.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] BODMAPPING:AllBODMapping (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014W</PluginId>
            <Name>AllBODMapping</Name>
            <Family>BODMAPPING</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014X.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014X.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] BODMAPPING:Active BOD Mappings (Infor 8.301)</Caption>
            <PluginId>pDEMOA00014X</PluginId>
            <Name>Active BOD Mappings</Name>
            <Family>BODMAPPING</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\BACKOFFICE_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\BACKOFFICE_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into BACKOFFICE</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>COUNTRYCODEFORMAT</string>
              <string>VERSION</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>BACKOFFICE</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>BACKOFFICEID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="BACKOFFICEID" inverted="false" operator="=" value="ICRMSR000001" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000I7.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000I7.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [SystemOfRecord]</Caption>
            <PickListId>kDEMOA0000I7</PickListId>
            <PickListName>SystemOfRecord</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\BODMAPPING_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\BODMAPPING_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into BODMAPPING</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>BODMAPPINGNAME</string>
              <string>NOUN</string>
              <string>ENTITYNAME</string>
              <string>UNIQUEIDXPATH</string>
              <string>UNIQUEIDNODE</string>
              <string>PRIORITY</string>
              <string>OUTBOUNDTEMPLATE</string>
              <string>ISCUSTOM</string>
              <string>HANDLERCLASSNAME</string>
              <string>DELETEBEHAVIOR</string>
              <string>PARENTBODMAPPINGID</string>
              <string>RELEASEID</string>
              <string>VERSIONID</string>
              <string>OUTBOUNDONCREATE</string>
              <string>OUTBOUNDONUPDATE</string>
              <string>OUTBOUNDONDELETE</string>
              <string>GENOUTTEMPLATE</string>
              <string>SECCODEID</string>
              <string>SYSISACTIVE</string>
              <string>STDBODMAPPINGID</string>
              <string>SYSTEMOFRECORD</string>
              <string>SYNCTEMPLATE</string>
              <string>ACKNOWLEDGETEMPLATE</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>BODMAPPING</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>BODMAPPINGID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="BACKOFFICEID" inverted="false" operator="=" value="ICRMSR000001" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\BODFIELDMAPPING_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\BODFIELDMAPPING_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into BODFIELDMAPPING</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>ENTITY</string>
              <string>PROPERTY</string>
              <string>FIELDMAPPINGNAME</string>
              <string>PARENTENTITY</string>
              <string>ENTITYXPATH</string>
              <string>PROPERTYXPATH</string>
              <string>ISREQUIRED</string>
              <string>DEFAULTVALUE</string>
              <string>ISCUSTOM</string>
              <string>SYNCDIRECTION</string>
              <string>SECCODEID</string>
              <string>BODELEMENTSEQUENCE</string>
              <string>SYSISACTIVE</string>
              <string>STDBODFIELDMAPPINGID</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>BODFIELDMAPPING</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>BODFIELDMAPPINGID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="BODMAPPINGID" inverted="false" operator="=" value="IBMSR0000018" />
                <clause groupChange="0" logicalOperator="Or" field="BODMAPPINGID" inverted="false" operator="=" value="IBMSR0000003" />
                <clause groupChange="0" logicalOperator="Or" field="BODMAPPINGID" inverted="false" operator="=" value="IBMSR0000002" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_92f13055-2c64-496c-b061-d86920012497_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_92f13055-2c64-496c-b061-d86920012497_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ProdPackageKitView Add ErpStatus Column (MSSQL)</Caption>
            <ActionData>
              <ActionId>92f13055-2c64-496c-b061-d86920012497</ActionId>
              <ActionTitle>PRODPACKAGEKITVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PRODPACKAGEKITVIEW]'))
                    DROP VIEW [sysdba].[PRODPACKAGEKITVIEW]
                  </Statement>
                  <Title>Remove Existing View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[PRODPACKAGEKITVIEW]
                    AS
                    SELECT
                    PACKAGES.PACKAGESID AS PRODPACKAGEKITVIEWID,
                    'PKG' AS PRODPACKAGEKITTYPE,
                    PACKAGES.NAME AS [NAME],
                    null AS ACTUALID,
                    null AS FAMILY,
                    null AS PRICE,
                    null AS PRODUCTGROUP,
                    null AS STATUS,
                    null AS UNIT,
                    null AS STOCKVOLUME,
                    null AS STOCKWEIGHT,
                    null AS STOCKITEM,
                    null AS SUPPLIER,
                    null AS VENDOR,
                    null AS SITEID,
                    null AS WAREHOUSELOCATION,
                    null AS COMMISSIONABLE,
                    null AS TAXABLE,
                    null AS ACCOUNTINGPERIOD,
                    null AS GLACCOUNTNUMBER,
                    null AS GLSUBACCOUNTNUMBER,
                    null AS DATAOWNER,
                    null AS TYPE,
                    null AS FIXEDCOST,
                    null AS GLOBALSYNCID,
                    null AS APPID,
                    null AS COMMODITYGROUPID,
                    null AS ACTIVEFLAG,
                    null AS SELLINGALLOWEDFLAG,
                    null AS UNITOFMEASUREID,
                    null AS SELLINGUOMID,
                    null AS SELLINGUOMNUMBER,
                    null AS CLASSIFICATION,
                    NULL AS COMMODITYTYPE,
                    NULL AS ERPLOGICALID,
                    NULL AS ERPACCOUNTINGENTITYID,
                    NULL AS ERPSTATUS,
                    NULL AS ERPCONFIGUREDITEM
                    FROM   PACKAGES
                    UNION
                    SELECT
                    PRODUCT.PRODUCTID AS PRODPACKAGEKITVIEWID,
                    'KIT' AS PRODPACKAGEKITTYPE,
                    PRODUCT.NAME,
                    PRODUCT.ACTUALID,
                    PRODUCT.FAMILY,
                    PRODUCT.PRICE,
                    PRODUCT.PRODUCTGROUP,
                    PRODUCT.STATUS,
                    PRODUCT.UNIT,
                    PRODUCT.STOCKVOLUME,
                    PRODUCT.STOCKWEIGHT,
                    PRODUCT.STOCKITEM,
                    PRODUCT.SUPPLIER,
                    PRODUCT.VENDOR,
                    PRODUCT.SITEID,
                    PRODUCT.WAREHOUSELOCATION,
                    PRODUCT.COMMISSIONABLE,
                    PRODUCT.TAXABLE,
                    PRODUCT.ACCOUNTINGPERIOD,
                    PRODUCT.GLACCOUNTNUMBER,
                    PRODUCT.GLSUBACCOUNTNUMBER,
                    PRODUCT.DATAOWNER,
                    PRODUCT.TYPE,
                    PRODUCT.FIXEDCOST,
                    PRODUCT.GLOBALSYNCID,
                    PRODUCT.APPID,
                    PRODUCT.COMMODITYGROUPID,
                    PRODUCT.ACTIVEFLAG,
                    PRODUCT.SELLINGALLOWEDFLAG,
                    PRODUCT.UNITOFMEASUREID,
                    PRODUCT.SELLINGUOMID,
                    PRODUCT.SELLINGUOMNUMBER,
                    PRODUCT.CLASSIFICATION,
                    PRODUCT.COMMODITYTYPE,
                    PRODUCT.ERPLOGICALID,
                    PRODUCT.ERPACCOUNTINGENTITYID,
                    PRODUCT.ERPSTATUS,
                    PRODUCT.ERPCONFIGUREDITEM
                    FROM    PRODUCT
                    WHERE	PRODUCT.COMMODITYTYPE = 'Kit'
                    UNION
                    SELECT
                    PRODUCT.PRODUCTID AS PRODPACKAGEKITVIEWID,
                    'PRD' AS PRODPACKAGEKITTYPE,
                    PRODUCT.NAME,
                    PRODUCT.ACTUALID,
                    PRODUCT.FAMILY,
                    PRODUCT.PRICE,
                    PRODUCT.PRODUCTGROUP,
                    PRODUCT.STATUS,
                    PRODUCT.UNIT,
                    PRODUCT.STOCKVOLUME,
                    PRODUCT.STOCKWEIGHT,
                    PRODUCT.STOCKITEM,
                    PRODUCT.SUPPLIER,
                    PRODUCT.VENDOR,
                    PRODUCT.SITEID,
                    PRODUCT.WAREHOUSELOCATION,
                    PRODUCT.COMMISSIONABLE,
                    PRODUCT.TAXABLE,
                    PRODUCT.ACCOUNTINGPERIOD,
                    PRODUCT.GLACCOUNTNUMBER,
                    PRODUCT.GLSUBACCOUNTNUMBER,
                    PRODUCT.DATAOWNER,
                    PRODUCT.TYPE,
                    PRODUCT.FIXEDCOST,
                    PRODUCT.GLOBALSYNCID,
                    PRODUCT.APPID,
                    PRODUCT.COMMODITYGROUPID,
                    PRODUCT.ACTIVEFLAG,
                    PRODUCT.SELLINGALLOWEDFLAG,
                    PRODUCT.UNITOFMEASUREID,
                    PRODUCT.SELLINGUOMID,
                    PRODUCT.SELLINGUOMNUMBER,
                    PRODUCT.CLASSIFICATION,
                    PRODUCT.COMMODITYTYPE,
                    PRODUCT.ERPLOGICALID,
                    PRODUCT.ERPACCOUNTINGENTITYID,
                    PRODUCT.ERPSTATUS,
                    PRODUCT.ERPCONFIGUREDITEM
                    FROM    PRODUCT
                    WHERE	PRODUCT.COMMODITYTYPE IS NULL OR PRODUCT.COMMODITYTYPE &lt;&gt; 'Kit'
                  </Statement>
                  <Title>Add ErpStatus Column</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5fdf5efa-d8de-496a-89d5-a60a7e919720_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5fdf5efa-d8de-496a-89d5-a60a7e919720_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ProdPackageKitView Add ErpStatus Column (Oracle)</Caption>
            <ActionData>
              <ActionId>5fdf5efa-d8de-496a-89d5-a60a7e919720</ActionId>
              <ActionTitle>PRODPACKAGEKITVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW sysdba.PRODPACKAGEKITVIEW
                    AS
                    SELECT
                    PACKAGES.PACKAGESID AS PRODPACKAGEKITVIEWID,
                    'PKG' AS PRODPACKAGEKITTYPE,
                    PACKAGES.NAME AS NAME,
                    null AS ACTUALID,
                    null AS FAMILY,
                    null AS PRICE,
                    null AS PRODUCTGROUP,
                    null AS STATUS,
                    null AS UNIT,
                    null AS STOCKVOLUME,
                    null AS STOCKWEIGHT,
                    null AS STOCKITEM,
                    null AS SUPPLIER,
                    null AS VENDOR,
                    null AS SITEID,
                    null AS WAREHOUSELOCATION,
                    null AS COMMISSIONABLE,
                    null AS TAXABLE,
                    null AS ACCOUNTINGPERIOD,
                    null AS GLACCOUNTNUMBER,
                    null AS GLSUBACCOUNTNUMBER,
                    null AS DATAOWNER,
                    null AS TYPE,
                    null AS FIXEDCOST,
                    null AS GLOBALSYNCID,
                    null AS APPID,
                    null AS COMMODITYGROUPID,
                    null AS ACTIVEFLAG,
                    null AS SELLINGALLOWEDFLAG,
                    null AS UNITOFMEASUREID,
                    null AS SELLINGUOMID,
                    null AS SELLINGUOMNUMBER,
                    null AS CLASSIFICATION,
                    NULL AS COMMODITYTYPE,
                    NULL AS ERPLOGICALID,
                    NULL AS ERPACCOUNTINGENTITYID,
                    NULL AS ERPSTATUS,
                    NULL AS ERPCONFIGUREDITEM
                    FROM   PACKAGES
                    UNION
                    SELECT
                    PRODUCT.PRODUCTID AS PRODPACKAGEKITVIEWID,
                    'KIT' AS PRODPACKAGEKITTYPE,
                    PRODUCT.NAME,
                    PRODUCT.ACTUALID,
                    PRODUCT.FAMILY,
                    PRODUCT.PRICE,
                    PRODUCT.PRODUCTGROUP,
                    PRODUCT.STATUS,
                    PRODUCT.UNIT,
                    PRODUCT.STOCKVOLUME,
                    PRODUCT.STOCKWEIGHT,
                    PRODUCT.STOCKITEM,
                    PRODUCT.SUPPLIER,
                    PRODUCT.VENDOR,
                    PRODUCT.SITEID,
                    PRODUCT.WAREHOUSELOCATION,
                    PRODUCT.COMMISSIONABLE,
                    PRODUCT.TAXABLE,
                    PRODUCT.ACCOUNTINGPERIOD,
                    PRODUCT.GLACCOUNTNUMBER,
                    PRODUCT.GLSUBACCOUNTNUMBER,
                    PRODUCT.DATAOWNER,
                    PRODUCT.TYPE,
                    PRODUCT.FIXEDCOST,
                    PRODUCT.GLOBALSYNCID,
                    PRODUCT.APPID,
                    PRODUCT.COMMODITYGROUPID,
                    PRODUCT.ACTIVEFLAG,
                    PRODUCT.SELLINGALLOWEDFLAG,
                    PRODUCT.UNITOFMEASUREID,
                    PRODUCT.SELLINGUOMID,
                    PRODUCT.SELLINGUOMNUMBER,
                    PRODUCT.CLASSIFICATION,
                    PRODUCT.COMMODITYTYPE,
                    PRODUCT.ERPLOGICALID,
                    PRODUCT.ERPACCOUNTINGENTITYID,
                    PRODUCT.ERPSTATUS,
                    PRODUCT.ERPCONFIGUREDITEM
                    FROM    PRODUCT
                    WHERE	PRODUCT.COMMODITYTYPE = 'Kit'
                    UNION
                    SELECT
                    PRODUCT.PRODUCTID AS PRODPACKAGEKITVIEWID,
                    'PRD' AS PRODPACKAGEKITTYPE,
                    PRODUCT.NAME,
                    PRODUCT.ACTUALID,
                    PRODUCT.FAMILY,
                    PRODUCT.PRICE,
                    PRODUCT.PRODUCTGROUP,
                    PRODUCT.STATUS,
                    PRODUCT.UNIT,
                    PRODUCT.STOCKVOLUME,
                    PRODUCT.STOCKWEIGHT,
                    PRODUCT.STOCKITEM,
                    PRODUCT.SUPPLIER,
                    PRODUCT.VENDOR,
                    PRODUCT.SITEID,
                    PRODUCT.WAREHOUSELOCATION,
                    PRODUCT.COMMISSIONABLE,
                    PRODUCT.TAXABLE,
                    PRODUCT.ACCOUNTINGPERIOD,
                    PRODUCT.GLACCOUNTNUMBER,
                    PRODUCT.GLSUBACCOUNTNUMBER,
                    PRODUCT.DATAOWNER,
                    PRODUCT.TYPE,
                    PRODUCT.FIXEDCOST,
                    PRODUCT.GLOBALSYNCID,
                    PRODUCT.APPID,
                    PRODUCT.COMMODITYGROUPID,
                    PRODUCT.ACTIVEFLAG,
                    PRODUCT.SELLINGALLOWEDFLAG,
                    PRODUCT.UNITOFMEASUREID,
                    PRODUCT.SELLINGUOMID,
                    PRODUCT.SELLINGUOMNUMBER,
                    PRODUCT.CLASSIFICATION,
                    PRODUCT.COMMODITYTYPE,
                    PRODUCT.ERPLOGICALID,
                    PRODUCT.ERPACCOUNTINGENTITYID,
                    PRODUCT.ERPSTATUS,
                    PRODUCT.ERPCONFIGUREDITEM
                    FROM    PRODUCT
                    WHERE	PRODUCT.COMMODITYTYPE IS NULL OR PRODUCT.COMMODITYTYPE &lt;&gt; 'Kit'
                  </Statement>
                  <Title>Add ErpStatus Column</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_24a84967-1245-4736-8beb-3cfe8d0ee592_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_24a84967-1245-4736-8beb-3cfe8d0ee592_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PackageKitChildView Add ErpStatus (Oracle)</Caption>
            <ActionData>
              <ActionId>24a84967-1245-4736-8beb-3cfe8d0ee592</ActionId>
              <ActionTitle>PACKAGEKITCHILDVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW sysdba.PACKAGEKITCHILDVIEW
                    AS
                    SELECT
                    PP.PACKAGEPRODUCTID AS PACKAGEKITCHILDVIEWID,
                    PP.PACKAGESID AS PARENTID,
                    PP.QUANTITY,
                    P.PRODUCTID,
                    P.NAME,
                    P.ACTUALID,
                    P.FAMILY,
                    P.PRICE,
                    P.PRODUCTGROUP,
                    P.STATUS,
                    P.UNIT,
                    P.STOCKVOLUME,
                    P.STOCKWEIGHT,
                    P.STOCKITEM,
                    P.SUPPLIER,
                    P.VENDOR,
                    P.SITEID,
                    P.WAREHOUSELOCATION,
                    P.COMMISSIONABLE,
                    P.TAXABLE,
                    P.ACCOUNTINGPERIOD,
                    P.GLACCOUNTNUMBER,
                    P.GLSUBACCOUNTNUMBER,
                    P.DATAOWNER,
                    P.TYPE,
                    P.FIXEDCOST,
                    P.GLOBALSYNCID,
                    P.APPID,
                    P.COMMODITYGROUPID,
                    P.ACTIVEFLAG,
                    P.SELLINGALLOWEDFLAG,
                    P.UNITOFMEASUREID,
                    P.SELLINGUOMID,
                    P.SELLINGUOMNUMBER,
                    P.CLASSIFICATION,
                    P.COMMODITYTYPE,
                    P.ERPLOGICALID,
                    P.ERPACCOUNTINGENTITYID,
                    P.ERPSTATUS
                    FROM PACKAGEPRODUCT PP
                    JOIN PRODUCT P ON PP.PRODUCTID = P.PRODUCTID
                    WHERE PP.PACKAGESID IS NOT NULL
                    UNION
                    SELECT
                    PP.PACKAGEPRODUCTID AS PACKAGEKITCHILDVIEWID,
                    PP.PARENTPRODUCTID AS PARENTID,
                    PP.QUANTITY,
                    P.PRODUCTID,
                    P.NAME,
                    P.ACTUALID,
                    P.FAMILY,
                    P.PRICE,
                    P.PRODUCTGROUP,
                    P.STATUS,
                    P.UNIT,
                    P.STOCKVOLUME,
                    P.STOCKWEIGHT,
                    P.STOCKITEM,
                    P.SUPPLIER,
                    P.VENDOR,
                    P.SITEID,
                    P.WAREHOUSELOCATION,
                    P.COMMISSIONABLE,
                    P.TAXABLE,
                    P.ACCOUNTINGPERIOD,
                    P.GLACCOUNTNUMBER,
                    P.GLSUBACCOUNTNUMBER,
                    P.DATAOWNER,
                    P.TYPE,
                    P.FIXEDCOST,
                    P.GLOBALSYNCID,
                    P.APPID,
                    P.COMMODITYGROUPID,
                    P.ACTIVEFLAG,
                    P.SELLINGALLOWEDFLAG,
                    P.UNITOFMEASUREID,
                    P.SELLINGUOMID,
                    P.SELLINGUOMNUMBER,
                    P.CLASSIFICATION,
                    P.COMMODITYTYPE,
                    P.ERPLOGICALID,
                    P.ERPACCOUNTINGENTITYID,
                    P.ERPSTATUS
                    FROM PACKAGEPRODUCT PP
                    JOIN PRODUCT P ON PP.PRODUCTID = P.PRODUCTID
                    WHERE PP.PARENTPRODUCTID IS NOT NULL
                  </Statement>
                  <Title>PackageKitChildView Add ErpStatus</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_024a9cec-7e4e-474b-b1eb-9d859b69ff6f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_024a9cec-7e4e-474b-b1eb-9d859b69ff6f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PackageKitChildView Add ErpStatus (MSSQL)</Caption>
            <ActionData>
              <ActionId>024a9cec-7e4e-474b-b1eb-9d859b69ff6f</ActionId>
              <ActionTitle>PACKAGEKITCHILDVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PACKAGEKITCHILDVIEW]'))
                    DROP VIEW [sysdba].[PACKAGEKITCHILDVIEW]
                  </Statement>
                  <Title>Drop PackageKitChildView View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[PACKAGEKITCHILDVIEW]
                    AS
                    SELECT
                    PP.PACKAGEPRODUCTID AS PACKAGEKITCHILDVIEWID,
                    PP.PACKAGESID AS PARENTID,
                    PP.QUANTITY,
                    P.PRODUCTID,
                    P.NAME,
                    P.ACTUALID,
                    P.FAMILY,
                    P.PRICE,
                    P.PRODUCTGROUP,
                    P.STATUS,
                    P.UNIT,
                    P.STOCKVOLUME,
                    P.STOCKWEIGHT,
                    P.STOCKITEM,
                    P.SUPPLIER,
                    P.VENDOR,
                    P.SITEID,
                    P.WAREHOUSELOCATION,
                    P.COMMISSIONABLE,
                    P.TAXABLE,
                    P.ACCOUNTINGPERIOD,
                    P.GLACCOUNTNUMBER,
                    P.GLSUBACCOUNTNUMBER,
                    P.DATAOWNER,
                    P.TYPE,
                    P.FIXEDCOST,
                    P.GLOBALSYNCID,
                    P.APPID,
                    P.COMMODITYGROUPID,
                    P.ACTIVEFLAG,
                    P.SELLINGALLOWEDFLAG,
                    P.UNITOFMEASUREID,
                    P.SELLINGUOMID,
                    P.SELLINGUOMNUMBER,
                    P.CLASSIFICATION,
                    P.COMMODITYTYPE,
                    P.ERPLOGICALID,
                    P.ERPACCOUNTINGENTITYID,
                    P.ERPSTATUS
                    FROM PACKAGEPRODUCT PP
                    JOIN PRODUCT P ON PP.PRODUCTID = P.PRODUCTID
                    WHERE PP.PACKAGESID IS NOT NULL
                    UNION
                    SELECT
                    PP.PACKAGEPRODUCTID AS PACKAGEKITCHILDVIEWID,
                    PP.PARENTPRODUCTID AS PARENTID,
                    PP.QUANTITY,
                    P.PRODUCTID,
                    P.NAME,
                    P.ACTUALID,
                    P.FAMILY,
                    P.PRICE,
                    P.PRODUCTGROUP,
                    P.STATUS,
                    P.UNIT,
                    P.STOCKVOLUME,
                    P.STOCKWEIGHT,
                    P.STOCKITEM,
                    P.SUPPLIER,
                    P.VENDOR,
                    P.SITEID,
                    P.WAREHOUSELOCATION,
                    P.COMMISSIONABLE,
                    P.TAXABLE,
                    P.ACCOUNTINGPERIOD,
                    P.GLACCOUNTNUMBER,
                    P.GLSUBACCOUNTNUMBER,
                    P.DATAOWNER,
                    P.TYPE,
                    P.FIXEDCOST,
                    P.GLOBALSYNCID,
                    P.APPID,
                    P.COMMODITYGROUPID,
                    P.ACTIVEFLAG,
                    P.SELLINGALLOWEDFLAG,
                    P.UNITOFMEASUREID,
                    P.SELLINGUOMID,
                    P.SELLINGUOMNUMBER,
                    P.CLASSIFICATION,
                    P.COMMODITYTYPE,
                    P.ERPLOGICALID,
                    P.ERPACCOUNTINGENTITYID,
                    P.ERPSTATUS
                    FROM PACKAGEPRODUCT PP
                    JOIN PRODUCT P ON PP.PRODUCTID = P.PRODUCTID
                    WHERE PP.PARENTPRODUCTID IS NOT NULL
                  </Statement>
                  <Title>PackageKitChildView Add ErpStatus</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\BACKOFFICEACCTENTITY_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\BACKOFFICEACCTENTITY_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into BACKOFFICEACCTENTITY</Caption>
            <SelectedColumns>
              <string>BACKOFFICEID</string>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>NAME</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>BACKOFFICEACCTENTITY</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>BACKOFFICEACCTENTITYID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="BACKOFFICEID" inverted="false" operator="=" value="ICRMSR000001" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\APPIDMAPPING_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\APPIDMAPPING_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into APPIDMAPPING</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>NAME</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>APPIDMAPPING</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>APPID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="APPID" inverted="false" operator="=" value="IDAESRAIM001" />
                <clause groupChange="0" logicalOperator="Or" field="APPID" inverted="false" operator="=" value="QSYST0000000" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_6c81a462-1e4e-45e1-a559-699305a749b0_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_6c81a462-1e4e-45e1-a559-699305a749b0_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:DeleteObsoleteSmartParts (All)</Caption>
            <ActionData>
              <ActionId>6c81a462-1e4e-45e1-a559-699305a749b0</ActionId>
              <ActionTitle>DeleteObsoleteSmartParts</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    DELETE FROM SYSDBA.VIRTUALFILESYSTEM WHERE ITEMPATH = '\Model\Portal\SlxClient\ChildPages\Quote\SmartParts\AddEditDiscountChargeItem.smartpart.xml' AND ITEMNAME = 'AddEditDiscountChargeItem.smartpart.xml'
                  </Statement>
                  <Title>DeleteObsoleteSmartParts_Quote</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM SYSDBA.VIRTUALFILESYSTEM WHERE ITEMPATH = '\Model\Portal\SlxClient\ChildPages\ERPReceivable\SmartParts\AddEditDiscountChargeItem.smartpart.xml' AND ITEMNAME = 'AddEditDiscountChargeItem.smartpart.xml'</Statement>
                  <Title>DeleteObsoleteSmartParts_Receivable</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM SYSDBA.VIRTUALFILESYSTEM WHERE ITEMPATH = '\Model\Portal\SlxClient\ChildPages\SalesOrder\SmartParts\AddEditDiscountChargeItem.smartpart.xml' AND ITEMNAME = 'AddEditDiscountChargeItem.smartpart.xml'</Statement>
                  <Title>DeleteObsoleteSmartParts_SalesOrder</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5ddebb1a-a945-4f56-a9ba-37904d96878d_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5ddebb1a-a945-4f56-a9ba-37904d96878d_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Remove duplicate CustomSetting records (All)</Caption>
            <ActionData>
              <ActionId>5ddebb1a-a945-4f56-a9ba-37904d96878d</ActionId>
              <ActionTitle>Remove duplicate CustomSetting records</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    DELETE FROM SYSDBA.CUSTOMSETTINGS
                    WHERE CUSTOMSETTINGSID NOT IN ('IONCUSSET016','OBMCUSSET022','OBMCUSSET025','OBMCUSSET026','OBMCUSSET027','OBMCUSSET028')
                    AND
                    (
                    (CATEGORY = 'Outbound Message' AND DESCRIPTION  = 'ERPSalesOrder' AND DATAVALUE IS NULL)
                    OR
                    (CATEGORY = 'Back Office Extension' AND DESCRIPTION = 'Default Quote Duration (in days)' AND DATAVALUE='30')
                    OR
                    (CATEGORY = 'Outbound Message' AND DESCRIPTION  = 'DiscountChargeItem' AND DATAVALUE IN ('SODistributedCharge.Account','SODistributedTax.Account','SalesOrder#SOItemDistributedTax.Account','SOItemDistributedCharge.Account'))
                    )
                  </Statement>
                  <Title>Delete Duplicate CUSTOMSETTINGS</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM SYSDBA.CUSTOMSETTINGS WHERE CATEGORY = 'Back Office Extension' AND DESCRIPTION = 'Location'</Statement>
                  <Title>Delete Duplicate CUSTOMSETTINGS</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM SYSDBA.CUSTOMSETTINGS WHERE CATEGORY = 'Back Office Extension' AND DESCRIPTION = 'Account Entity ID'</Statement>
                  <Title>Delete Duplicate CUSTOMSETTINGS</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_b97f96ea-ce28-4cc1-8893-eaccd5ccfabc_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_b97f96ea-ce28-4cc1-8893-eaccd5ccfabc_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:UpdateMSSQLConfigurationID (MSSQL)</Caption>
            <ActionData>
              <ActionId>b97f96ea-ce28-4cc1-8893-eaccd5ccfabc</ActionId>
              <ActionTitle>UpdateMSSQLConfigurationID</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONID = QUOTEID
                    FROM sysdba.QUOTEITEM T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONDETAILID = QUOTEITEMID
                    FROM sysdba.QUOTEITEM T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONID = SALESORDERID
                    FROM sysdba.SALESORDERITEMS T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONDETAILID = SALESORDERITEMSID
                    FROM sysdba.SALESORDERITEMS T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONID = OPPORTUNITYID
                    FROM sysdba.OPPORTUNITY_PRODUCT T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE T1
                    SET CONFIGURATIONDETAILID = OPPPRODUCTID
                    FROM sysdba.OPPORTUNITY_PRODUCT T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T'
                  </Statement>
                  <Title>UpdateMSSQLConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_d8738979-a2f2-4215-b9f9-64f929fbf593_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_d8738979-a2f2-4215-b9f9-64f929fbf593_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:UpdateOracleConfigurationID (Oracle)</Caption>
            <ActionData>
              <ActionId>d8738979-a2f2-4215-b9f9-64f929fbf593</ActionId>
              <ActionTitle>UpdateOracleConfigurationID</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONID as CONFIGURATIONID, T1.QUOTEID as QUOTEID
                    FROM sysdba.QUOTEITEM T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONID = T.QUOTEID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONDETAILID as CONFIGURATIONDETAILID, T1.QUOTEID as QUOTEID
                    FROM sysdba.QUOTEITEM T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONDETAILID = T.QUOTEID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONID as CONFIGURATIONID, T1.SALESORDERID as SALESORDERID
                    FROM sysdba.SALESORDERITEMS T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONID = T.SALESORDERID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONDETAILID as CONFIGURATIONDETAILID, T1.SALESORDERID as SALESORDERID
                    FROM sysdba.SALESORDERITEMS T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONDETAILID = T.SALESORDERID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONID as CONFIGURATIONID, T1.OPPORTUNITYID as OPPORTUNITYID
                    FROM sysdba.OPPORTUNITY_PRODUCT T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONID = T.OPPORTUNITYID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    UPDATE
                    (SELECT T1.CONFIGURATIONDETAILID as CONFIGURATIONDETAILID, T1.OPPORTUNITYID as OPPORTUNITYID
                    FROM sysdba.OPPORTUNITY_PRODUCT T1
                    INNER JOIN sysdba.PRODUCT T2 ON T1.PRODUCTID = T2.PRODUCTID
                    WHERE T1.CONFIGURATIONDETAILID IS NULL AND T2.ERPCONFIGUREDITEM = 'T') T
                    SET T.CONFIGURATIONDETAILID = T.OPPORTUNITYID
                  </Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>commit</Statement>
                  <Title>UpdateOracleConfigurationID</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_34a78bc8-4021-48b0-bea3-be61ae70376a_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_34a78bc8-4021-48b0-bea3-be61ae70376a_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_FEDERATEDIDENTITY_LENGTH_A (MSSQL)</Caption>
            <ActionData>
              <ActionId>34a78bc8-4021-48b0-bea3-be61ae70376a</ActionId>
              <ActionTitle>USERSECURITY_FEDERATEDIDENTITY_LENGTH_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>ALTER TABLE sysdba.USERSECURITY ALTER COLUMN FEDERATEDIDENTITY VARCHAR(128)</Statement>
                  <Title>Increase the USERSECURITY.FEDERATEDIDENTITY field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_4506f2d5-ad3f-42d1-8279-91dea4f5039b_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_4506f2d5-ad3f-42d1-8279-91dea4f5039b_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_FEDERATEDIDENTITY_LENGTH_U (MSSQL)</Caption>
            <ActionData>
              <ActionId>4506f2d5-ad3f-42d1-8279-91dea4f5039b</ActionId>
              <ActionTitle>USERSECURITY_FEDERATEDIDENTITY_LENGTH_U</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>ALTER TABLE sysdba.USERSECURITY ALTER COLUMN FEDERATEDIDENTITY NVARCHAR(128)</Statement>
                  <Title>Increase the USERSECURITY.FEDERATEDIDENTITY field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_700740d2-10cc-4006-8265-a3af16faf877_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_700740d2-10cc-4006-8265-a3af16faf877_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_FEDERATEDIDENTITY_LENGTH_A (Oracle)</Caption>
            <ActionData>
              <ActionId>700740d2-10cc-4006-8265-a3af16faf877</ActionId>
              <ActionTitle>USERSECURITY_FEDERATEDIDENTITY_LENGTH_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>Alter TABLE sysdba.USERSECURITY MODIFY FEDERATEDIDENTITY VARCHAR2(128)</Statement>
                  <Title>Increase the USERSECURITY.FEDERATEDIDENTITY field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_40bc41f3-a29a-4e13-8bd1-fe83cef1df01_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_40bc41f3-a29a-4e13-8bd1-fe83cef1df01_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_FEDERATEDIDENTITY_LENGTH_U (Oracle Unicode)</Caption>
            <ActionData>
              <ActionId>40bc41f3-a29a-4e13-8bd1-fe83cef1df01</ActionId>
              <ActionTitle>USERSECURITY_FEDERATEDIDENTITY_LENGTH_U</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>Alter TABLE sysdba.USERSECURITY MODIFY FEDERATEDIDENTITY NVARCHAR2(128)</Statement>
                  <Title>Increase the USERSECURITY.FEDERATEDIDENTITY field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_700740d2-10cc-4006-8265-a3af16faf888_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_700740d2-10cc-4006-8265-a3af16faf888_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_USERNAME_LENGTH_A (Oracle)</Caption>
            <ActionData>
              <ActionId>700740d2-10cc-4006-8265-a3af16faf888</ActionId>
              <ActionTitle>USERSECURITY_USERNAME_LENGTH_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>Alter TABLE sysdba.USERSECURITY MODIFY USERCODE VARCHAR2(128)</Statement>
                  <Title>Increase the USERSECURITY.USERNAME field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_40bc41f3-a29a-4e13-8bd1-fe83cef1df12_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_40bc41f3-a29a-4e13-8bd1-fe83cef1df12_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_USERNAME_LENGTH_U (Oracle Unicode)</Caption>
            <ActionData>
              <ActionId>40bc41f3-a29a-4e13-8bd1-fe83cef1df12</ActionId>
              <ActionTitle>USERSECURITY_USERNAME_LENGTH_U</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>Alter TABLE sysdba.USERSECURITY MODIFY USERCODE NVARCHAR2(128)</Statement>
                  <Title>Increase the USERSECURITY.USERNAME field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_34a78bc8-4021-48b0-bea3-be61ae70387a_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_34a78bc8-4021-48b0-bea3-be61ae70387a_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_USERNAME_LENGTH_A (MSSQL)</Caption>
            <ActionData>
              <ActionId>34a78bc8-4021-48b0-bea3-be61ae70387a</ActionId>
              <ActionTitle>USERSECURITY_USERNAME_LENGTH_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>ALTER TABLE sysdba.USERSECURITY ALTER COLUMN USERCODE VARCHAR(128)</Statement>
                  <Title>Increase the USERSECURITY.USERNAME field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_4506f2d5-ad3f-42d1-8279-91dea4f5040b_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_4506f2d5-ad3f-42d1-8279-91dea4f5040b_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:USERSECURITY_USERNAME_LENGTH_U (MSSQL)</Caption>
            <ActionData>
              <ActionId>4506f2d5-ad3f-42d1-8279-91dea4f5040b</ActionId>
              <ActionTitle>USERSECURITY_USERNAME_LENGTH_U</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>ALTER TABLE sysdba.USERSECURITY ALTER COLUMN USERCODE NVARCHAR(128)</Statement>
                  <Title>Increase the USERSECURITY.USERNAME field size to 128</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_513d542d-1bb0-4ed4-992c-358db3ab7f16_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_513d542d-1bb0-4ed4-992c-358db3ab7f16_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Remove Invalid ObjectNames (MSSQL)</Caption>
            <ActionData>
              <ActionId>513d542d-1bb0-4ed4-992c-358db3ab7f16</ActionId>
              <ActionTitle>Remove Invalid ObjectNames</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>delete from DB_OBJECTDEFINITION where OBJECTNAME = 'Add ErpLogicalId Column'</Statement>
                  <Title>Add ErpLogicalId Column</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM DB_OBJECTDEFINITION WHERE OBJECTNAME = 'PackageKitChildView Add ErpLogicalId'</Statement>
                  <Title>PackageKitChildView Add ErpLogicalId</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>delete from DB_OBJECTDEFINITION where OBJECTNAME = 'Add ErpAccountingEntityId Column'</Statement>
                  <Title>Add ErpAccountingEntityId Column</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM DB_OBJECTDEFINITION WHERE OBJECTNAME = 'PackageKitChildView Add ErpAccountingEntityId'</Statement>
                  <Title>PackageKitChildView Add ErpAccountingEntityId</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>DELETE FROM DB_OBJECTDEFINITION WHERE OBJECTNAME = 'PickListItemView: Add Filter Column'</Statement>
                  <Title>PickListItemView: Add Filter Column</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014Y.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014Y.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [CrystalReport] Opportunity:Opportunity Detail (Infor 8.304)</Caption>
            <PluginId>pDEMOA00014Y</PluginId>
            <Name>Opportunity Detail</Name>
            <Family>Opportunity</Family>
            <PluginType>CrystalReport</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.304</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00014Z.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00014Z.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [CrystalReport] Quote:Quotation (Infor 8.31)</Caption>
            <PluginId>pDEMOA00014Z</PluginId>
            <Name>Quotation</Name>
            <Family>Quote</Family>
            <PluginType>CrystalReport</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.31</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_8b9ed59a-a5f0-4cdf-88e6-0079c9105ce3_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_8b9ed59a-a5f0-4cdf-88e6-0079c9105ce3_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CRMPREFIXFORROLES (All)</Caption>
            <ActionData>
              <ActionId>8b9ed59a-a5f0-4cdf-88e6-0079c9105ce3</ActionId>
              <ActionTitle>CRMPREFIXFORROLES</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    UPDATE sysdba.ROLE SET ERPROLENAME = REPLACE ((CASE WHEN ROLENAME NOT LIKE 'CRM-%' THEN CONCAT('CRM-', ROLENAME)
                    WHEN ROLENAME LIKE 'CRM-%' THEN ROLENAME END) , ' ' , '_' )
                  </Statement>
                  <Title>CRMPREFIXTOROLESSCRIPT</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\USEROPTIONDEF_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\USEROPTIONDEF_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into USEROPTIONDEF</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>USEROPTIONDEF</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>NAME|CATEGORY</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="CATEGORY" inverted="false" operator="=" value="DefaultGroup" />
                <clause groupChange="0" logicalOperator="And" field="NAME" inverted="false" operator="in" value="LEAD,SALESORDER,QUOTE" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\INTEGRATION_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\INTEGRATION_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into INTEGRATION</Caption>
            <SelectedColumns>
              <string>MODIFYUSER</string>
              <string>MODIFYDATE</string>
              <string>NAME</string>
              <string>AUTHTYPE</string>
              <string>SYNCABLE</string>
              <string>SUPPORTSSCHEMAREQUEST</string>
              <string>SYNCHANDLER</string>
              <string>SYNCMETHOD</string>
              <string>LINKTYPE</string>
              <string>SYNCINTERVAL</string>
              <string>SYNCSTARTTIME</string>
              <string>SYNCENDTIME</string>
              <string>SYNCORDER</string>
              <string>ADMINEMAILADDRESS</string>
              <string>ADMINEMAILPASSWORD</string>
              <string>VERSION</string>
              <string>ADMINUSERNAME</string>
              <string>DOMAIN</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>INTEGRATION</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>INTEGRATIONID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>QDEMOA000EV3</string>
              <string>ICRMGEO00001</string>
              <string>ICRMCSI00001</string>
              <string>ICRMLINKEDIN</string>
              <string>MARKET000001</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddSecuredActionsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddSecuredActionsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddSecuredActions\SecAca40382ec-cbbc-4a56-9ea8-69bb6887b76c.xml</ItemId>
            <Url>\Actions\AddSecuredActions\SecAca40382ec-cbbc-4a56-9ea8-69bb6887b76c.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Secured Action(s)</Caption>
            <ActionData>
              <SecuredActions>
                <SecuredActionBundleItem>
                  <Name>Contour/Map/Group</Name>
                  <Description>Allows for searching for and viewing groups on a map.</Description>
                  <Parent>Contour/Map</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/Add</Name>
                  <Description>Allows for access to add a Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/Delete</Name>
                  <Description>Allows for access to delete a Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/View</Name>
                  <Description>Allows for access to delete a Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/Share</Name>
                  <Description>Allows for access to share a Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/ShareDelete</Name>
                  <Description>Allows for access to delete a shared Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/ShareEdit</Name>
                  <Description>Allows for access to edit a shared Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/Place/Edit</Name>
                  <Description>Allows for access to edit a Place.</Description>
                  <Parent>Entities/Place</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Contour/Map/Account</Name>
                  <Description>Allows for searching for and viewing accounts on a map.</Description>
                  <Parent>Contour/Map</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Contour/Map/Contact</Name>
                  <Description>Allows for searching for and viewing contacts on a map.</Description>
                  <Parent>Contour/Map</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Contour/Map/Menu</Name>
                  <Description>Allows for access to the Contour menu.</Description>
                  <Parent>Contour/Map</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>ErrorLookupService/View</Name>
                  <Description>Allows the user to view Event Viewer error information from a URL link.</Description>
                  <Parent>ErrorLookupService</Parent>
                </SecuredActionBundleItem>
              </SecuredActions>
              <ActionId>a40382ec-cbbc-4a56-9ea8-69bb6887b76c</ActionId>
              <ReplaceList>false</ReplaceList>
            </ActionData>
          </AddSecuredActionsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddSecuredActionsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddSecuredActionsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddSecuredActions\SecAc7985677c-7395-48d5-87c3-6910ec5d5bca.xml</ItemId>
            <Url>\Actions\AddSecuredActions\SecAc7985677c-7395-48d5-87c3-6910ec5d5bca.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Secured Action(s)</Caption>
            <ActionData>
              <SecuredActions>
                <SecuredActionBundleItem>
                  <Name>Navigation/Administration/View</Name>
                  <Description>View Administration Navigation Menu</Description>
                  <Parent>Navigation/Administration</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Navigation/Sales/View</Name>
                  <Description>View Sales Navigation Menu</Description>
                  <Parent>Navigation/Sales</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Navigation/Marketing/View</Name>
                  <Description>View Marking Navigation Menu</Description>
                  <Parent>Navigation/Marketing</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Navigation/Service/View</Name>
                  <Description>View Service Navigation Menu</Description>
                  <Parent>Navigation/Service</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Navigation/Support/View</Name>
                  <Description>View Support Navigation Menu</Description>
                  <Parent>Navigation/Support</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Navigation/Integration/View</Name>
                  <Description>View Integration Navigation Menu</Description>
                  <Parent>Navigation/Integration</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/New/View</Name>
                  <Description>View New Toolbar Menu</Description>
                  <Parent>Toolbar/New</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Schedule/View</Name>
                  <Description>View Schedule Toolbar Menu</Description>
                  <Parent>Toolbar/Schedule</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Tools/View</Name>
                  <Description>View Tools Toolbar Menu</Description>
                  <Parent>Toolbar/Tools</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Administration/View</Name>
                  <Description>View Administration Toolbar Menu</Description>
                  <Parent>Toolbar/Administration</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Tools/LiteratureRequestManagement/View</Name>
                  <Description>View Literature Request Management Tools Menu Item</Description>
                  <Parent>Toolbar/Tools/LiteratureRequestManagement</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Tools/ImportHistory/View</Name>
                  <Description>View Import History Tools Menu Item</Description>
                  <Parent>Toolbar/Tools/ImportHistory</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Tools/Options/View</Name>
                  <Description>View Options Tools Menu Item</Description>
                  <Parent>Toolbar/Tools/Options</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Toolbar/Tools/AdvancedSpeedsearch/View</Name>
                  <Description>View Advanced Speedsearch Tools Menu item</Description>
                  <Parent>Toolbar/Tools/AdvancedSpeedsearch</Parent>
                </SecuredActionBundleItem>
              </SecuredActions>
              <ActionId>7985677c-7395-48d5-87c3-6910ec5d5bca</ActionId>
              <ReplaceList>false</ReplaceList>
            </ActionData>
          </AddSecuredActionsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddSecuredActionsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddSecuredActionsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddSecuredActions\SecAca6a574d3-d7f3-43a1-a2ef-6204bef682d1.xml</ItemId>
            <Url>\Actions\AddSecuredActions\SecAca6a574d3-d7f3-43a1-a2ef-6204bef682d1.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Secured Action(s)</Caption>
            <ActionData>
              <SecuredActions>
                <SecuredActionBundleItem>
                  <Name>Administration/CustomSetting/Add</Name>
                  <Description>Allow adding of new custom setting</Description>
                  <Parent>Administration/CustomSetting</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Administration/CustomSetting/Edit</Name>
                  <Description>Allows editing of an existing custom setting</Description>
                  <Parent>Administration/CustomSetting</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Administration/CustomSetting/Delete</Name>
                  <Description>Allow deletion of a custom setting</Description>
                  <Parent>Administration/CustomSetting</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Administration/CustomSetting/View</Name>
                  <Description>Allow viewing of custom Settings</Description>
                  <Parent>Administration/CustomSetting</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/IONWorkflowDefinition/Add</Name>
                  <Description>Allow adding of new workflow definition</Description>
                  <Parent>Entities/IONWorkflowDefinition</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/IONWorkflowDefinition/Edit</Name>
                  <Description>Allows editing of an existing workflow definition</Description>
                  <Parent>Entities/IONWorkflowDefinition</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/IONWorkflowDefinition/Delete</Name>
                  <Description>Allow deletion of a workflow definition</Description>
                  <Parent>Entities/IONWorkflowDefinition</Parent>
                </SecuredActionBundleItem>
                <SecuredActionBundleItem>
                  <Name>Entities/IONWorkflowDefinition/View</Name>
                  <Description>Allow viewing of workflow definition</Description>
                  <Parent>Entities/IONWorkflowDefinition</Parent>
                </SecuredActionBundleItem>
              </SecuredActions>
              <ActionId>a6a574d3-d7f3-43a1-a2ef-6204bef682d1</ActionId>
              <ReplaceList>false</ReplaceList>
            </ActionData>
          </AddSecuredActionsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddSecuredActionsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddSecuredActionsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddSecuredActions\SecAcac529a3a-c8ea-4eab-905a-57cba773d430.xml</ItemId>
            <Url>\Actions\AddSecuredActions\SecAcac529a3a-c8ea-4eab-905a-57cba773d430.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Secured Action(s)</Caption>
            <ActionData>
              <SecuredActions>
                <SecuredActionBundleItem>
                  <Name>Entities/Account/Hierarchy</Name>
                  <Description>Allows for the access to view account hierarchy.</Description>
                  <Parent>Entities/Account</Parent>
                </SecuredActionBundleItem>
              </SecuredActions>
              <ActionId>ac529a3a-c8ea-4eab-905a-57cba773d430</ActionId>
              <ReplaceList>false</ReplaceList>
            </ActionData>
          </AddSecuredActionsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.Security.AddRolesAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddRolesAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddRoles\Roles_Data.xml</ItemId>
            <Url>\Actions\AddRoles\Roles_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Add Role(s)</Caption>
            <RoleData>
              <ReplaceAllActions>false</ReplaceAllActions>
              <Roles>
                <RoleBundleItem>
                  <RoleName>Standard User</RoleName>
                  <Description>Access to all standard sales client functionality</Description>
                  <RelatedActions>
                    <string>Entities/Quote/ConvertToSalesOrder</string>
                    <string>Entities/Quote/GetOrderTotal</string>
                    <string>Entities/SalesOrder/GetOrderTotal</string>
                    <string>Navigation/Administration/View</string>
                    <string>Navigation/Sales/View</string>
                    <string>Navigation/Marketing/View</string>
                    <string>Navigation/Service/View</string>
                    <string>Navigation/Support/View</string>
                    <string>Navigation/Integration/View</string>
                    <string>Toolbar/New/View</string>
                    <string>Toolbar/Schedule/View</string>
                    <string>Toolbar/Tools/View</string>
                    <string>Toolbar/Administration/View</string>
                    <string>Entities/Defect/BulkUpdate</string>
                    <string>Entities/Defect/BulkDelete</string>
                    <string>Entities/DefectActivityRate/Add</string>
                    <string>Entities/DefectActivityRate/Delete</string>
                    <string>Entities/DefectActivityRate/Edit</string>
                    <string>Entities/DefectActivityRate/View</string>
                    <string>Entities/DefectActivityRate/BulkDelete</string>
                    <string>Entities/Department/BulkUpdate</string>
                    <string>Entities/TicketAreaOwner/Add</string>
                    <string>Entities/TicketAreaOwner/Delete</string>
                    <string>Entities/TicketAreaOwner/Edit</string>
                    <string>Entities/TicketAreaOwner/View</string>
                  </RelatedActions>
                </RoleBundleItem>
                <RoleBundleItem>
                  <RoleName>Contour</RoleName>
                  <Description>Access Contour features</Description>
                  <RelatedActions>
                    <string>Entities/Place/Edit</string>
                    <string>Entities/Place/Add</string>
                    <string>Entities/Place/Share</string>
                    <string>Entities/Place/ShareDelete</string>
                    <string>Entities/Place/ShareEdit</string>
                    <string>Entities/Place/View</string>
                    <string>Entities/Place/Delete</string>
                    <string>Contour/Map/Account</string>
                    <string>Contour/Map/Contact</string>
                    <string>Contour/Map/Group</string>
                    <string>Contour/Map/Menu</string>
                  </RelatedActions>
                </RoleBundleItem>
                <RoleBundleItem>
                  <RoleName>Administrator</RoleName>
                  <Description>Responsible for Administration of portal functionality</Description>
                  <RelatedActions>
                    <string>Administration/CustomSetting/Add</string>
                    <string>Administration/CustomSetting/Edit</string>
                    <string>Administration/CustomSetting/Delete</string>
                    <string>Administration/CustomSetting/View</string>
                    <string>Administration/GroupManager/Groups/ToggleUserDefault</string>
                    <string>ErrorLookupService/View</string>
                    <string>Entities/Account/Hierarchy</string>
                    <string>Administration/EntityManager/Entities/Add</string>
                    <string>Administration/EntityManager/Entities/Edit</string>
                    <string>Administration/EntityManager/Fields/Add</string>
                    <string>Administration/EntityManager/Fields/Edit</string>
                    <string>Administration/EntityManager/Fields/Delete</string>
                    <string>Administration/EntityManager/Relationship/Add</string>
                    <string>Administration/EntityManager/Relationship/Edit</string>
                    <string>Administration/EntityManager/Relationship/Delete</string>
                    <string>Administration/FormManager/View</string>
                    <string>Administration/PickList/Add</string>
                    <string>Administration/Picklist/Edit</string>
                    <string>Administration/Picklist/Delete</string>
                    <string>Administration/Picklist/View</string>
                    <string>Administration/Role/Add</string>
                    <string>Administration/Role/View</string>
                    <string>Administration/Role/Edit</string>
                    <string>Administration/Role/Delete</string>
                    <string>Administration/SDataConfiguration/View</string>
                    <string>Administration/SecuredAction/Add</string>
                    <string>Administration/SecuredAction/Edit</string>
                    <string>Administration/SecuredAction/Delete</string>
                    <string>Administration/SecuredAction/View</string>
                    <string>Entities/Account/BulkUpdate</string>
                    <string>Entities/Account/BulkDelete</string>
                    <string>Entities/ACI/BulkDelete</string>
                    <string>Entities/ACI/Import</string>
                    <string>Entities/ACI/BulkUpdate</string>
                    <string>Entities/ACI/Add</string>
                    <string>Entities/ACI/Delete</string>
                    <string>Entities/ACI/Edit</string>
                    <string>Entities/ACI/View</string>
                    <string>Entities/Campaign/BulkUpdate</string>
                    <string>Entities/Campaign/BulkDelete</string>
                    <string>Entities/Competitor/BulkUpdate</string>
                    <string>Entities/Competitor/BulkDelete</string>
                    <string>Entities/Competitor/View</string>
                    <string>Entities/Competitor/Add</string>
                    <string>Entities/Competitor/Edit</string>
                    <string>Entities/Contact/BulkDelete</string>
                    <string>Entities/Contact/BulkUpdate</string>
                    <string>Entities/Contract/BulkDelete</string>
                    <string>Entities/Contract/BulkUpdate</string>
                    <string>Entities/CountryCodeMapping/View</string>
                    <string>Entities/CountryCodeMapping/ExportToFile</string>
                    <string>Entities/CountryCodeMapping/Import</string>
                    <string>Entities/CountryCodeMapping/Add</string>
                    <string>Entities/CountryCodeMapping/Delete</string>
                    <string>Entities/CountryCodeMapping/Edit</string>
                    <string>Entities/Defect/BulkUpdate</string>
                    <string>Entities/Defect/BulkDelete</string>
                    <string>Entities/DefectActivityRate/Add</string>
                    <string>Entities/DefectActivityRate/Delete</string>
                    <string>Entities/DefectActivityRate/Edit</string>
                    <string>Entities/DefectActivityRate/View</string>
                    <string>Entities/DefectActivityRate/BulkDelete</string>
                    <string>Entities/Department/BulkUpdate</string>
                    <string>Entities/Department/View</string>
                    <string>Entities/Department/Delete</string>
                    <string>Entities/Department/Edit</string>
                    <string>Entities/Department/Add</string>
                    <string>Entities/ExchangeRate/BulkDelete</string>
                    <string>Entities/ExchangeRate/View</string>
                    <string>Entities/ExchangeRate/Add</string>
                    <string>Entities/ExchangeRate/Delete</string>
                    <string>Entities/ExchangeRate/Edit</string>
                    <string>Entities/Lead/BulkDelete</string>
                    <string>Entities/Lead/BulkUpdate</string>
                    <string>Entities/LeadSource/BulkDelete</string>
                    <string>Entities/LeadSource/BulkUpdate</string>
                    <string>Entities/LeadSource/Add</string>
                    <string>Entities/LeadSource/Edit</string>
                    <string>Entities/LeadSource/Delete</string>
                    <string>Entities/LeadSource/View</string>
                    <string>Entities/Literature/Edit</string>
                    <string>Entities/Literature/Delete</string>
                    <string>Entities/Literature/Add</string>
                    <string>Entities/Literature/View</string>
                    <string>Entities/OfficeProfile/View</string>
                    <string>Entities/OfficeProfile/Edit</string>
                    <string>Entities/OfficeProfile/Delete</string>
                    <string>Entities/Opportunity/Promote</string>
                    <string>Entities/Opportunity/BulkDelete</string>
                    <string>Entities/Opportunity/BulkUpdate</string>
                    <string>Entities/Package/BulkUpdate</string>
                    <string>Entities/Package/BulkDelete</string>
                    <string>Entities/Product/BulkUpdate</string>
                    <string>Entities/Product/BulkDelete</string>
                    <string>Entities/Qualification/BulkDelete</string>
                    <string>Entities/Qualification/BulkUpdate</string>
                    <string>Entities/Qualification/Add</string>
                    <string>Entities/Qualification/View</string>
                    <string>Entities/Quote/RePriceQuote</string>
                    <string>Entities/Quote/BulkDelete</string>
                    <string>Entities/Quote/BulkUpdate</string>
                    <string>Entities/Quote/GeneratePropasal</string>
                    <string>Entities/Resource/Add</string>
                    <string>Entities/Resource/Delete</string>
                    <string>Entities/Resource/Edit</string>
                    <string>Entities/Resource/View</string>
                    <string>Entities/Return/BulkDelete</string>
                    <string>Entities/Return/BulkUpdate</string>
                    <string>Entities/Role/Promote</string>
                    <string>Entities/SalesOrder/RePriceOrder</string>
                    <string>Entities/SalesOrder/BulkDelete</string>
                    <string>Entities/SalesOrder/BulkUpdate</string>
                    <string>Entities/SecuredAction/Add</string>
                    <string>Entities/SecuredAction/Delete</string>
                    <string>Entities/SecuredAction/Edit</string>
                    <string>Entities/SecuredAction/View</string>
                    <string>Entities/SecurityManager/Profile</string>
                    <string>Entities/SecurityManager/EditProfile</string>
                    <string>Entities/SecurityManager/AddProfile</string>
                    <string>Entities/SecurityManager/View</string>
                    <string>Entities/StandardProblems/Add</string>
                    <string>Entities/StandardResolution/Add</string>
                    <string>Entities/Team/Add</string>
                    <string>Entities/Team/Delete</string>
                    <string>Entities/Team/View</string>
                    <string>Entities/Team/Edit</string>
                    <string>Entities/Team/BulkUpdate</string>
                    <string>Entities/Ticket/BulkDelete</string>
                    <string>Entities/Ticket/BulkUpdate</string>
                    <string>Entities/TicketActivityRate/Add</string>
                    <string>Entities/TicketActivityRate/Delete</string>
                    <string>Entities/TicketActivityRate/Edit</string>
                    <string>Entities/TicketActivityRate/View</string>
                    <string>Entities/TicketActivityRate/BulkDelete</string>
                    <string>Entities/TicketAreaOwner/Add</string>
                    <string>Entities/TicketAreaOwner/Delete</string>
                    <string>Entities/TicketAreaOwner/Edit</string>
                    <string>Entities/TicketAreaOwner/View</string>
                    <string>Entities/User/Add</string>
                    <string>Entities/User/Delete</string>
                    <string>Entities/User/Edit</string>
                    <string>Entities/User/View</string>
                    <string>Entities/User/AssociateUser</string>
                    <string>Entities/User/DisAssociateUser</string>
                    <string>Entities/User/BulkUpdate</string>
                    <string>Entities/User/Promote</string>
                  </RelatedActions>
                </RoleBundleItem>
                <RoleBundleItem>
                  <RoleName>Order and Quote Processor</RoleName>
                  <Description>Limits the access for Order and Quote processing</Description>
                  <RelatedActions>
                    <string>Entities/Quote/RePriceQuote</string>
                    <string>Entities/Quote/GeneratePropasal</string>
                    <string>Entities/SalesOrder/RePriceOrder</string>
                  </RelatedActions>
                </RoleBundleItem>
                <RoleBundleItem>
                  <RoleName>CRM-Marketo User</RoleName>
                  <Description>Access Marketo Features</Description>
                  <RelatedActions>
                    <string>Entities/MarketoLeads/View</string>
                    <string>Entities/MarketoSessionLog/View</string>
                    <string>Entities/Account/PromoteToMarketo</string>
                    <string>Entities/Account/DeleteFromMarketo</string>
                    <string>Entities/Opportunity/PromoteToMarketo</string>
                    <string>Entities/Opportunity/DeleteFromMarketo</string>
                  </RelatedActions>
                </RoleBundleItem>
              </Roles>
            </RoleData>
          </AddRolesAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000150.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000150.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PLACE:AllPlaces (Infor 1)</Caption>
            <PluginId>pDEMOA000150</PluginId>
            <Name>AllPlaces</Name>
            <Family>PLACE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>1</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000151.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000151.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PLACE:MyPlaces (Infor 1)</Caption>
            <PluginId>pDEMOA000151</PluginId>
            <Name>MyPlaces</Name>
            <Family>PLACE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>1</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000152.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000152.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PLACE:SharedPlaces (Infor 1)</Caption>
            <PluginId>pDEMOA000152</PluginId>
            <Name>SharedPlaces</Name>
            <Family>PLACE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>1</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_f8a73c1c-56b0-4050-a461-1e30991b7027_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_f8a73c1c-56b0-4050-a461-1e30991b7027_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PlaceRemoteSync (All)</Caption>
            <ActionData>
              <ActionId>f8a73c1c-56b0-4050-a461-1e30991b7027</ActionId>
              <ActionTitle>PlaceRemoteSync</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.RESYNCTABLEDEFS SET OMNIDIRECTIONAL = 'T' WHERE TABLENAME='PLACE'</Statement>
                  <Title>PlaceScript</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\JOINDATA_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\JOINDATA_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into JOINDATA</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>JOINDATA</TableName>
            <GenerateNewIds>true</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>JOINID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>jDEMOA00003H</string>
              <string>jDEMOA00003G</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\IONWORKFLOWDEFINITION_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\IONWORKFLOWDEFINITION_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into IONWORKFLOWDEFINITION</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>IONWORKFLOWDEFINITION</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>WORKFLOWDEFINITIONID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>WKFLDIDQ0100</string>
              <string>WKFLDIDL0100</string>
              <string>WKFLDIDS0100</string>
              <string>WKFLDIDO0100</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\IONWORKFLOWMAPPING_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\IONWORKFLOWMAPPING_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into IONWORKFLOWMAPPING</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>IONWORKFLOWMAPPING</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>WORKFLOWMAPPINGID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>WKFLMIDQ0100</string>
              <string>WKFLMIDL0100</string>
              <string>WKFLMIDS0100</string>
              <string>WKFLMIDO0100</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\INDEXDEFINITION_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\INDEXDEFINITION_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into INDEXDEFINITION</Caption>
            <SelectedColumns>
              <string>METADATA</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>INDEXDEFINITION</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>INDEXID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>QDEMOA006M8P</string>
              <string>QDEMOA006M8Q</string>
              <string>QDEMOA006M93</string>
              <string>QDEMOA006M9B</string>
              <string>QDEMOA006M8Y</string>
              <string>kSYST0000004</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000153.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000153.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Column Chart (SalesLogix 8.305)</Caption>
            <PluginId>pDEMOA000153</PluginId>
            <Name>Column Chart</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>SalesLogix</Company>
            <CompanyVersion>8.305</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_fa6d0731-ca5f-4612-8276-894cca3da7dd_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_fa6d0731-ca5f-4612-8276-894cca3da7dd_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:DependencyLookupControl (All)</Caption>
            <ActionData>
              <ActionId>fa6d0731-ca5f-4612-8276-894cca3da7dd</ActionId>
              <ActionTitle>DependencyLookupControl</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.SYSTEMINFO  SET ISSUEMATCH = 'T' WHERE ISSUEMATCH IS NULL</Statement>
                  <Title>DependencyLookupControl</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5fd2671c-89e6-4835-8fe5-73f15651463b_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5fd2671c-89e6-4835-8fe5-73f15651463b_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:FixOpportunityDateOpenedType (All)</Caption>
            <ActionData>
              <ActionId>5fd2671c-89e6-4835-8fe5-73f15651463b</ActionId>
              <ActionTitle>FixOpportunityDateOpenedType</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.SECTABLEDEFS SET DATETIMETYPE = 'D' WHERE TABLENAME = 'OPPORTUNITY' AND FIELDNAME = 'DATEOPENED'</Statement>
                  <Title>FixOpportunityDateOpenedType</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateFieldAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateFieldAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateField\PLUGIN.CUSTOMFLAG.xml</ItemId>
            <Url>\Actions\Schema\CreateField\PLUGIN.CUSTOMFLAG.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Field PLUGIN.CUSTOMFLAG</Caption>
            <ColumnTypeName>Sage.SalesLogix.SchemaSupport.SlxDataColumn, Sage.SalesLogix.SchemaSupport</ColumnTypeName>
            <TableName>PLUGIN</TableName>
            <FieldName>CUSTOMFLAG</FieldName>
          </CreateFieldAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_545a0c89-3842-448f-a5bf-d43454d2e195_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_545a0c89-3842-448f-a5bf-d43454d2e195_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:SetMaxFavoriteGroups (All)</Caption>
            <ActionData>
              <ActionId>545a0c89-3842-448f-a5bf-d43454d2e195</ActionId>
              <ActionTitle>SetMaxFavoriteGroups</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE sysdba.BRANCHOPTIONS SET MAXIMUMFAVORITEGROUPS = 30 WHERE MAXIMUMFAVORITEGROUPS IS NULL</Statement>
                  <Title>SetMaxFavortieGroups</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000154.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000154.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [ACOGroup] ACCOUNT:Sales Intelligence (Infor 1)</Caption>
            <PluginId>pDEMOA000154</PluginId>
            <Name>Sales Intelligence</Name>
            <Family>ACCOUNT</Family>
            <PluginType>ACOGroup</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.306</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000155.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000155.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [ACOGroup] Contact:Sales Intelligence (Infor 1)</Caption>
            <PluginId>pDEMOA000155</PluginId>
            <Name>Sales Intelligence</Name>
            <Family>Contact</Family>
            <PluginType>ACOGroup</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.306</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\SICUSTOMER.SICUSTOMER_CUSTOMERID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\SICUSTOMER.SICUSTOMER_CUSTOMERID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index SICUSTOMER.SICUSTOMER_CUSTOMERID</Caption>
            <TableName>SICUSTOMER</TableName>
            <IndexName>SICUSTOMER_CUSTOMERID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\SIRECOMMENDATION.SIRECOMMENDATION_CUSTOMERID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\SIRECOMMENDATION.SIRECOMMENDATION_CUSTOMERID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index SIRECOMMENDATION.SIRECOMMENDATION_CUSTOMERID</Caption>
            <TableName>SIRECOMMENDATION</TableName>
            <IndexName>SIRECOMMENDATION_CUSTOMERID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5b544995-f449-4956-b37b-5e88c4f155aa_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5b544995-f449-4956-b37b-5e88c4f155aa_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Foreign Key For SIRecommendation - SIRationale (MSSQL)</Caption>
            <ActionData>
              <ActionId>5b544995-f449-4956-b37b-5e88c4f155aa</ActionId>
              <ActionTitle>Foreign Key For SIRecommendation - SIRationale</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF NOT EXISTS (SELECT 1 FROM SYS.OBJECTS where object_id = OBJECT_ID(N'[sysdba].[SIRATIONALE_SIRECOMMENDATION_FK]', N'F') AND parent_object_id = OBJECT_ID('[sysdba].[SIRATIONALE]'))
                    ALTER TABLE [sysdba].[SIRATIONALE]  WITH CHECK ADD  CONSTRAINT [SIRATIONALE_SIRECOMMENDATION_FK] FOREIGN KEY([SIRECOMMENDATIONID])
                    REFERENCES [sysdba].[SIRECOMMENDATION] ([SIRECOMMENDATIONID])
                  </Statement>
                  <Title>Foreign Key for SIRecommendation/SIRationale</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000156.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000156.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [ACOGroup] Contact:Duplicate Emails (Infor 8.306)</Caption>
            <PluginId>pDEMOA000156</PluginId>
            <Name>Duplicate Emails</Name>
            <Family>Contact</Family>
            <PluginType>ACOGroup</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.306</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000157.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000157.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] CUSTOMSETTINGS:All Custom Settings (SalesLogix)</Caption>
            <PluginId>pDEMOA000157</PluginId>
            <Name>All Custom Settings</Name>
            <Family>CUSTOMSETTINGS</Family>
            <PluginType>Group</PluginType>
            <Company>SalesLogix</Company>
            <CompanyVersion>8.306</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CustomSetting.AddCustomSettingAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddCustomSettingAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddCustomSettingAction\setting_3976f761-0ff7-4f08-aff0-c7bb265569ba.xml</ItemId>
            <Url>\Actions\AddCustomSettingAction\setting_3976f761-0ff7-4f08-aff0-c7bb265569ba.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Custom Setting:[Groups] CreatePivot = True</Caption>
            <Validation>True or False</Validation>
            <Category>Groups</Category>
            <Description>CreatePivot</Description>
            <DataType>True / False</DataType>
            <DataValue>True</DataValue>
            <VersionNumber>8.306</VersionNumber>
            <Id>3976f761-0ff7-4f08-aff0-c7bb265569ba</Id>
          </AddCustomSettingAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CustomSetting.AddCustomSettingAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddCustomSettingAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddCustomSettingAction\setting_96b8e68a-986e-418a-a68c-26bee13f7509.xml</ItemId>
            <Url>\Actions\AddCustomSettingAction\setting_96b8e68a-986e-418a-a68c-26bee13f7509.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Custom Setting:[Groups] MaxExportRecordCount = 65000</Caption>
            <Validation>Numbers Only</Validation>
            <Category>Groups</Category>
            <Description>MaxExportRecordCount</Description>
            <DataType>Number</DataType>
            <DataValue>65000</DataValue>
            <VersionNumber>8.306</VersionNumber>
            <Id>96b8e68a-986e-418a-a68c-26bee13f7509</Id>
          </AddCustomSettingAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000158.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000158.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Links (SalesLogix 8.3)</Caption>
            <PluginId>pDEMOA000158</PluginId>
            <Name>Links</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>SalesLogix</Company>
            <CompanyVersion>8.3</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>DISTRIBUTEDTAXSOID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOITEMID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOITEMID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.DISTRIBUTEDTAXSOITEMID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>DISTRIBUTEDTAXSOITEMID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.INVOICEID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.INVOICEID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.INVOICEID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>INVOICEID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.INVOICEITEMID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.INVOICEITEMID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.INVOICEITEMID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>INVOICEITEMID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.QuoteId_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.QuoteId_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.QuoteId_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>QuoteId_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.QuoteItemId_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.QuoteItemId_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.QuoteItemId_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>QuoteItemId_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.ReceivableId_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.ReceivableId_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.ReceivableId_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>ReceivableId_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.SALESORDERID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.SALESORDERID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.SALESORDERID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>SALESORDERID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.SALESORDERITEMSID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.SALESORDERITEMSID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.SALESORDERITEMSID_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>SALESORDERITEMSID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.ShipmentId_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\DISCOUNTCHARGEITEM.ShipmentId_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index DISCOUNTCHARGEITEM.ShipmentId_IDX</Caption>
            <TableName>DISCOUNTCHARGEITEM</TableName>
            <IndexName>ShipmentId_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\BACKOFFICE.LOGICALID_IDX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\BACKOFFICE.LOGICALID_IDX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index BACKOFFICE.LOGICALID_IDX</Caption>
            <TableName>BACKOFFICE</TableName>
            <IndexName>LOGICALID_IDX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\CONTACT.CONTACT_LFNAMECID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\CONTACT.CONTACT_LFNAMECID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index CONTACT.CONTACT_LFNAMECID</Caption>
            <TableName>CONTACT</TableName>
            <IndexName>CONTACT_LFNAMECID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\CONTACT.CONTACT_APPIDTICK.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\CONTACT.CONTACT_APPIDTICK.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index CONTACT.CONTACT_APPIDTICK</Caption>
            <TableName>CONTACT</TableName>
            <IndexName>CONTACT_APPIDTICK</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_GRANDTOT.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_GRANDTOT.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPINVOICE.ERPINVOICE_GRANDTOT</Caption>
            <TableName>ERPINVOICE</TableName>
            <IndexName>ERPINVOICE_GRANDTOT</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_ERPINVOICEID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_ERPINVOICEID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPINVOICE.ERPINVOICE_ERPINVOICEID</Caption>
            <TableName>ERPINVOICE</TableName>
            <IndexName>ERPINVOICE_ERPINVOICEID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_EXTID_ERPINVOICE.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_EXTID_ERPINVOICE.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPINVOICE.ERPINVOICE_EXTID_ERPINVOICE</Caption>
            <TableName>ERPINVOICE</TableName>
            <IndexName>ERPINVOICE_EXTID_ERPINVOICE</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_SECCODEACCT.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPINVOICE.ERPINVOICE_SECCODEACCT.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPINVOICE.ERPINVOICE_SECCODEACCT</Caption>
            <TableName>ERPINVOICE</TableName>
            <IndexName>ERPINVOICE_SECCODEACCT</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPINVOICEITEM.ERPINVOICEITEM_ERPINVOICEITEMID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPINVOICEITEM.ERPINVOICEITEM_ERPINVOICEITEMID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPINVOICEITEM.ERPINVOICEITEM_ERPINVOICEITEMID</Caption>
            <TableName>ERPINVOICEITEM</TableName>
            <IndexName>ERPINVOICEITEM_ERPINVOICEITEMID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\ERPSHIPMENT.ERPSHIPMENT_SHIPDOCREF.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\ERPSHIPMENT.ERPSHIPMENT_SHIPDOCREF.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index ERPSHIPMENT.ERPSHIPMENT_SHIPDOCREF</Caption>
            <TableName>ERPSHIPMENT</TableName>
            <IndexName>ERPSHIPMENT_SHIPDOCREF</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\PICKLIST.PICKLIST_SHORT.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\PICKLIST.PICKLIST_SHORT.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index PICKLIST.PICKLIST_SHORT</Caption>
            <TableName>PICKLIST</TableName>
            <IndexName>PICKLIST_SHORT</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\PRODUCT.PRODUCT_PRODIDMODUSER.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\PRODUCT.PRODUCT_PRODIDMODUSER.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index PRODUCT.PRODUCT_PRODIDMODUSER</Caption>
            <TableName>PRODUCT</TableName>
            <IndexName>PRODUCT_PRODIDMODUSER</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\PRODUCT.PRODUCT_PRODNAMEPRODID.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\PRODUCT.PRODUCT_PRODNAMEPRODID.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index PRODUCT.PRODUCT_PRODNAMEPRODID</Caption>
            <TableName>PRODUCT</TableName>
            <IndexName>PRODUCT_PRODNAMEPRODID</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\SALESORDER.SALEORDER_GRANDTOT.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\SALESORDER.SALEORDER_GRANDTOT.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index SALESORDER.SALEORDER_GRANDTOT</Caption>
            <TableName>SALESORDER</TableName>
            <IndexName>SALEORDER_GRANDTOT</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\SALESORDER.SALEORDER_SUFXPREFX.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\SALESORDER.SALEORDER_SUFXPREFX.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index SALESORDER.SALEORDER_SUFXPREFX</Caption>
            <TableName>SALESORDER</TableName>
            <IndexName>SALEORDER_SUFXPREFX</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\SYNCRESULT.SYNCRESULT_APPCODE.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\SYNCRESULT.SYNCRESULT_APPCODE.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index SYNCRESULT.SYNCRESULT_APPCODE</Caption>
            <TableName>SYNCRESULT</TableName>
            <IndexName>SYNCRESULT_APPCODE</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\UNITOFMEASURE.UNITOFMEASURE_PRODID_NAME.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\UNITOFMEASURE.UNITOFMEASURE_PRODID_NAME.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index UNITOFMEASURE.UNITOFMEASURE_PRODID_NAME</Caption>
            <TableName>UNITOFMEASURE</TableName>
            <IndexName>UNITOFMEASURE_PRODID_NAME</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\VIRTUALFILESYSTEM_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\VIRTUALFILESYSTEM_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into VIRTUALFILESYSTEM</Caption>
            <SelectedColumns />
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>VIRTUALFILESYSTEM</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>VIRTUALFILESYSTEMID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="ITEMNAME" inverted="false" operator="=" value="CurrencyConfiguration.xml" />
                <clause groupChange="0" logicalOperator="Or" field="ITEMNAME" inverted="false" operator="=" value="masterConfig.xml" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_1296e750-c1dc-4aca-9641-8bb860096b3f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_1296e750-c1dc-4aca-9641-8bb860096b3f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBackOfficeMappingViews (MSSQL)</Caption>
            <ActionData>
              <ActionId>1296e750-c1dc-4aca-9641-8bb860096b3f</ActionId>
              <ActionTitle>CreateBackOfficeMappingViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[BODMAPPINGSUPPORTVIEW]'))
                    DROP VIEW [SYSDBA].[BODMAPPINGSUPPORTVIEW]
                  </Statement>
                  <Title>Drop_BODMAPPINGSUPPORTVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[BACKOFFICEMAPPINGVIEW]'))
                    DROP VIEW [SYSDBA].[BACKOFFICEMAPPINGVIEW]
                  </Statement>
                  <Title>Drop_BACKOFFICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [SYSDBA].[BACKOFFICEMAPPINGVIEW] AS
                    SELECT BO.BACKOFFICEID AS BOID, BM.*,BO.ISACTIVE AS ISBACKOFFICEACTIVE,BO.LOGICALID
                    FROM SYSDBA.BACKOFFICE AS BO
                    INNER JOIN  SYSDBA.BODMAPPING as BM
                    ON (BM.BACKOFFICEID = bo.BACKOFFICEID OR (bm.BACKOFFICEID = bo.STDBACKOFFICEID AND bm.ISCUSTOM = 'F'))  -- Set of all dependent Bod Mappings, Standard and Customized
                    WHERE bm.BODMAPPINGID not in
                    (SELECT BMC.STDBODMAPPINGID FROM SYSDBA.BODMAPPING AS BMC
                    WHERE (BMC.BACKOFFICEID = bo.BACKOFFICEID) AND (BMC.ISCUSTOM = 'T') AND BMC.STDBODMAPPINGID is not null ) -- Eliminate set of standard Bod Mappings that have been customized
                  </Statement>
                  <Title>Create_BACKOFFICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_bc754828-d217-4c24-a408-5f22c44ffd10_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_bc754828-d217-4c24-a408-5f22c44ffd10_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBackOfficeMappingViews (Oracle)</Caption>
            <ActionData>
              <ActionId>bc754828-d217-4c24-a408-5f22c44ffd10</ActionId>
              <ActionTitle>CreateBackOfficeMappingViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW SYSDBA.BACKOFFICEMAPPINGVIEW AS
                    SELECT BO.BACKOFFICEID  BOID, BM.*,BO.ISACTIVE AS ISBACKOFFICEACTIVE,BO.LOGICALID
                    FROM sysdba.BACKOFFICE  BO
                    INNER JOIN  sysdba.BODMAPPING  BM
                    ON (BM.BACKOFFICEID = bo.BACKOFFICEID OR (bm.BACKOFFICEID = bo.STDBACKOFFICEID AND bm.ISCUSTOM = 'F'))  -- Set of all dependent Bod Mappings, Standard and Customized
                    WHERE bm.BODMAPPINGID not in
                    (SELECT BMC.STDBODMAPPINGID FROM sysdba.BODMAPPING  BMC
                    WHERE (BMC.BACKOFFICEID = bo.BACKOFFICEID) AND (BMC.ISCUSTOM = 'T') AND BMC.STDBODMAPPINGID is not null ) -- Eliminate set of standard Bod Mappings that have been customized
                  </Statement>
                  <Title>Create_BACKOFFICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_04ae5c80-62f6-4d29-b102-eec4bbf4b7eb_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_04ae5c80-62f6-4d29-b102-eec4bbf4b7eb_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBODMapFieldMapViews (MSSQL)</Caption>
            <ActionData>
              <ActionId>04ae5c80-62f6-4d29-b102-eec4bbf4b7eb</ActionId>
              <ActionTitle>CreateBODMapFieldMapViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[BODFIELDMAPPINGSUPPORTVIEW]'))
                    DROP VIEW [SYSDBA].[BODFIELDMAPPINGSUPPORTVIEW]
                  </Statement>
                  <Title>Drop_BODFIELDMAPPINGSUPPORTVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[BODMAPPINGFIELDMAPPINGVIEW]'))
                    DROP VIEW [SYSDBA].[BODMAPPINGFIELDMAPPINGVIEW]
                  </Statement>
                  <Title>Drop_BODMAPPINGFIELDMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [SYSDBA].[BODMAPPINGFIELDMAPPINGVIEW] AS
                    SELECT BM.BODMAPPINGID AS BMID, BFM.*
                    FROM SYSDBA.BODMAPPING AS BM
                    INNER JOIN SYSDBA.BODFIELDMAPPING AS BFM
                    ON(BFM.BODMAPPINGID = BM.BODMAPPINGID or (BFM.BODMAPPINGID = BM.STDBODMAPPINGID and BFM.ISCUSTOM = 'F' )) -- Define Set of dependent Bod Field Mappings, Standard and Customized
                    WHERE BFM.BODFIELDMAPPINGID not in
                    (SELECT BFMC.STDBODFIELDMAPPINGID from SYSDBA.BODFIELDMAPPING BFMC
                    WHERE BFMC.BODMAPPINGID = bm.BODMAPPINGID and bfmc.ISCUSTOM = 'T' and bfmc.STDBODFIELDMAPPINGID is not null)
                  </Statement>
                  <Title>Create_BODMAPPINGFIELDMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_7aa95940-8511-432f-bf09-4920ca4a9791_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_7aa95940-8511-432f-bf09-4920ca4a9791_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBODMapFieldMapViews (Oracle)</Caption>
            <ActionData>
              <ActionId>7aa95940-8511-432f-bf09-4920ca4a9791</ActionId>
              <ActionTitle>CreateBODMapFieldMapViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW SYSDBA.BODMAPPINGFIELDMAPPINGVIEW AS
                    SELECT BM.BODMAPPINGID  BMID, BFM.*
                    FROM SYSDBA.BODMAPPING  BM
                    INNER JOIN SYSDBA.BODFIELDMAPPING  BFM
                    ON(BFM.BODMAPPINGID = BM.BODMAPPINGID or (BFM.BODMAPPINGID = BM.STDBODMAPPINGID and BFM.ISCUSTOM = 'F' )) -- Define Set of dependent Bod Field Mappings, Standard and Customized
                    WHERE BFM.BODFIELDMAPPINGID not in
                    (SELECT BFMC.STDBODFIELDMAPPINGID from SYSDBA.BODFIELDMAPPING BFMC
                    WHERE BFMC.BODMAPPINGID = bm.BODMAPPINGID and bfmc.ISCUSTOM = 'T' and bfmc.STDBODFIELDMAPPINGID is not null)
                  </Statement>
                  <Title>Create_BODMAPPINGFIELDMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_b78b8994-6e00-49c9-81a1-4a131e540c75_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_b78b8994-6e00-49c9-81a1-4a131e540c75_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBackOfficePriceServiceViews (MSSQL)</Caption>
            <ActionData>
              <ActionId>b78b8994-6e00-49c9-81a1-4a131e540c75</ActionId>
              <ActionTitle>CreateBackOfficePriceServiceViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[PRICESERVICESUPPORTVIEW]'))
                    DROP VIEW [SYSDBA].[PRICESERVICESUPPORTVIEW]
                  </Statement>
                  <Title>Drop_PRICESERVICESUPPORTVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[BACKOFFICEPRICESERVICEVIEW]'))
                    DROP VIEW [SYSDBA].[BACKOFFICEPRICESERVICEVIEW]
                  </Statement>
                  <Title>Drop_BACKOFFICEPRICESERVICEVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [SYSDBA].[BACKOFFICEPRICESERVICEVIEW] AS
                    SELECT bo.BACKOFFICEID as BOID, PAS.*
                    FROM SYSDBA.BACKOFFICE AS BO
                    INNER JOIN  SYSDBA.BOEPASERVICE as PAS
                    ON (PAS.BACKOFFICEID = bo.BACKOFFICEID OR (PAS.BACKOFFICEID = bo.STDBACKOFFICEID and PAS.ISCUSTOM = 'F'))
                    -- Set of all dependent Bod Price Mappings, Standard and Customized
                    WHERE pas.BOEPASERVICEID not in
                    (SELECT pasc.STDBOEPASERVICEID
                    FROM   SYSDBA.BOEPASERVICE as PASC
                    WHERE  PASC.BACKOFFICEID = bo.BACKOFFICEID and PASC.ISCUSTOM = 'T' and pasc.STDBOEPASERVICEID is not null)
                  </Statement>
                  <Title>Create_BACKOFFICEPRICESERVICEVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_966bb1f1-82f6-4ec1-992b-80be367d07b9_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_966bb1f1-82f6-4ec1-992b-80be367d07b9_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreateBackOfficePriceServiceViews (Oracle)</Caption>
            <ActionData>
              <ActionId>966bb1f1-82f6-4ec1-992b-80be367d07b9</ActionId>
              <ActionTitle>CreateBackOfficePriceServiceViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW SYSDBA.BACKOFFICEPRICESERVICEVIEW AS
                    SELECT bo.BACKOFFICEID  BOID, PAS.*
                    FROM SYSDBA.BACKOFFICE  BO
                    INNER JOIN  SYSDBA.BOEPASERVICE  PAS
                    ON (PAS.BACKOFFICEID = bo.BACKOFFICEID OR (PAS.BACKOFFICEID = bo.STDBACKOFFICEID and PAS.ISCUSTOM = 'F'))
                    -- Set of all dependent Bod Price Mappings, Standard and Customized
                    WHERE pas.BOEPASERVICEID not in
                    (SELECT pasc.STDBOEPASERVICEID
                    FROM   SYSDBA.BOEPASERVICE  PASC
                    WHERE  PASC.BACKOFFICEID = bo.BACKOFFICEID and PASC.ISCUSTOM = 'T' and pasc.STDBOEPASERVICEID is not null)
                  </Statement>
                  <Title>Create_BACKOFFICEPRICESERVICEVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_bae09de2-ebd8-4aef-aa89-341e77244037_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_bae09de2-ebd8-4aef-aa89-341e77244037_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreatePriceServiceMappingViews (MSSQL)</Caption>
            <ActionData>
              <ActionId>bae09de2-ebd8-4aef-aa89-341e77244037</ActionId>
              <ActionTitle>CreatePriceServiceMappingViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[PRICESERVICEMAPPINGSUPPORTVIEW]'))
                    DROP VIEW [SYSDBA].[PRICESERVICEMAPPINGSUPPORTVIEW]
                  </Statement>
                  <Title>Drop_PRICESERVICEMAPPINGSUPPORTVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    IF EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[SYSDBA].[PRICESERVICEMAPPINGVIEW]'))
                    DROP VIEW [SYSDBA].[PRICESERVICEMAPPINGVIEW]
                  </Statement>
                  <Title>Drop_PRICESERVICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [SYSDBA].[PRICESERVICEMAPPINGVIEW] AS
                    SELECT pas.BOEPASERVICEID as PSID, PAM.*
                    FROM SYSDBA.BOEPASERVICE AS PAS
                    INNER JOIN SYSDBA.BOEPAMAPPING AS PAM
                    ON(PAM.BOEPASERVICEID = PAS.BOEPASERVICEID or (PAM.BOEPASERVICEID = PAS.STDBOEPASERVICEID and PAM.ISCUSTOM = 'F'))
                    -- Set of all dependent Bod Field Mappings, Standard and Customized
                    LEFT OUTER JOIN SYSDBA.BOEPAMAPPING AS PAMC
                    ON(PAMC.BOEPASERVICEID = PAS.BOEPASERVICEID and PAMC.STDBOEPAMAPPINGID = PAM.BOEPAMAPPINGID
                    and PAMC.ISCUSTOM = 'T')  -- Set of customized Bod Field Mappings
                    WHERE (PAMC.BOEPAMAPPINGID is null or PAM.ISCUSTOM = 'T') -- Eliminate standard mappings with corresponding customized record
                  </Statement>
                  <Title>Create_PRICESERVICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_f720eafe-bf14-425f-a2db-06461e1cf439_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_f720eafe-bf14-425f-a2db-06461e1cf439_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CreatePriceServiceMappingViews (Oracle)</Caption>
            <ActionData>
              <ActionId>f720eafe-bf14-425f-a2db-06461e1cf439</ActionId>
              <ActionTitle>CreatePriceServiceMappingViews</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW SYSDBA.PRICESERVICEMAPPINGVIEW AS
                    SELECT pas.BOEPASERVICEID  PSID, PAM.*
                    FROM SYSDBA.BOEPASERVICE  PAS
                    INNER JOIN SYSDBA.BOEPAMAPPING  PAM
                    ON(PAM.BOEPASERVICEID = PAS.BOEPASERVICEID or (PAM.BOEPASERVICEID = PAS.STDBOEPASERVICEID and PAM.ISCUSTOM = 'F'))
                    -- Set of all dependent Bod Field Mappings, Standard and Customized
                    LEFT OUTER JOIN SYSDBA.BOEPAMAPPING  PAMC
                    ON(PAMC.BOEPASERVICEID = PAS.BOEPASERVICEID and PAMC.STDBOEPAMAPPINGID = PAM.BOEPAMAPPINGID
                    and PAMC.ISCUSTOM = 'T')  -- Set of customized Bod Field Mappings
                    WHERE (PAMC.BOEPAMAPPINGID is null or PAM.ISCUSTOM = 'T')
                  </Statement>
                  <Title>Create_PRICESERVICEMAPPINGVIEW</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateIndexAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateIndexAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateIndex\CARRIER.CARRIER_ErpUniqueId.xml</ItemId>
            <Url>\Actions\Schema\CreateIndex\CARRIER.CARRIER_ErpUniqueId.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Index CARRIER.CARRIER_ErpUniqueId</Caption>
            <TableName>CARRIER</TableName>
            <IndexName>CARRIER_ErpUniqueId</IndexName>
            <IndexTypeName>Sage.SalesLogix.SchemaSupport.SlxIndex, Sage.SalesLogix.SchemaSupport</IndexTypeName>
          </CreateIndexAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000159.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000159.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Group List (Infor 8.307)</Caption>
            <PluginId>pDEMOA000159</PluginId>
            <Name>Group List</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.307</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_485d2c7d-d08f-4121-b089-4100e646159f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_485d2c7d-d08f-4121-b089-4100e646159f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CONTACT_INTEGRATION_CHANGE (MSSQL)</Caption>
            <ActionData>
              <ActionId>485d2c7d-d08f-4121-b089-4100e646159f</ActionId>
              <ActionTitle>CONTACT_INTEGRATION_CHANGE_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[CONTACT_INTEGRATION_CHANGE]'))
                    DROP TRIGGER [sysdba].[CONTACT_INTEGRATION_CHANGE]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[CONTACT_INTEGRATION_CHANGE] ON [sysdba].[CONTACT]
                    FOR UPDATE NOT FOR REPLICATION
                    AS
                    BEGIN
                    SET NOCOUNT ON
                    DECLARE @globalsyncid   VARCHAR(36)
                    DECLARE @changekey      VARCHAR(36)
                    DECLARE @recid          CHAR(12)
                    DECLARE @user     CHAR(12)
                    DECLARE @sysappid       CHAR(12)
                    DECLARE @afterappid     CHAR(12)
                    DECLARE @workphone   VARCHAR(32)
                    DECLARE @homephone   VARCHAR(32)
                    DECLARE @fax     VARCHAR(32)
                    DECLARE @mobile    VARCHAR(32)
                    DECLARE @pager          VARCHAR(32)
                    DECLARE @other          VARCHAR(32)
                    DECLARE @email    VARCHAR(128)
                    DECLARE @secondaryemail VARCHAR(128)
                    DECLARE @email3    VARCHAR(128)
                    DECLARE @nexttick    int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int
                    SELECT @nestlevel = TRIGGER_NESTLEVEL()
                    DECLARE ContUpdCursor CURSOR FOR SELECT CONTACTID,MODIFYUSER,GLOBALSYNCID,APPID,WORKPHONE,HOMEPHONE,FAX,MOBILE,PAGER,OTHERPHONE,EMAIL,SECONDARYEMAIL,EMAIL3,CHANGEKEY FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN ContUpdCursor
                    FETCH NEXT from ContUpdCursor INTO @recid, @user, @globalsyncid, @afterappid, @workphone, @homephone, @fax, @mobile, @pager, @other, @email, @secondaryemail, @email3, @changekey
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    IF (@nestlevel &gt; 1)
                    BREAK

                    IF (@globalsyncid is null)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    END


                    -- update email and phone tables
                    IF (UPDATE(WORKPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'WORKPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@workphone is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='WORKPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@workphone WHERE ENTITYID=@recid AND COLUMNMAP='WORKPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('1'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'WORKPHONE', 'BusinessPhone', @workphone,'CONTACT')
                    END
                    END
                    IF (UPDATE(HOMEPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'HOMEPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@homephone is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='HOMEPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@homephone WHERE ENTITYID=@recid AND COLUMNMAP='HOMEPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('2'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'HOMEPHONE', 'PersonalPhone', @homephone,'CONTACT')
                    END
                    END
                    IF (UPDATE(FAX))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'FAX') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@fax is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='FAX'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@fax WHERE ENTITYID=@recid AND COLUMNMAP='FAX'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('3'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'FAX', 'BusinessFax', @fax,'CONTACT')
                    END
                    END
                    IF (UPDATE(MOBILE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'MOBILE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@mobile is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='MOBILE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@mobile WHERE ENTITYID=@recid AND COLUMNMAP='MOBILE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('4'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'MOBILE', 'BusinessMobile', @mobile,'CONTACT')
                    END
                    END
                    IF (UPDATE(PAGER))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'PAGER') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@pager is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='PAGER'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@pager WHERE ENTITYID=@recid AND COLUMNMAP='PAGER'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('5'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'PAGER', 'Pager', @pager,'CONTACT')
                    END
                    END
                    IF (UPDATE(OTHERPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'OTHERPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@other is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='OTHERPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@other WHERE ENTITYID=@recid AND COLUMNMAP='OTHERPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('6'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'OTHERPHONE', 'OtherPhone', @other,'CONTACT')
                    END
                    END
                    IF (UPDATE(EMAIL))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'EMAIL') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@email is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@email WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('1'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'EMAIL', 'Business', @email,'CONTACT')
                    END
                    END
                    IF (UPDATE(SECONDARYEMAIL))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'SECONDARYEMAIL') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@secondaryemail is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='SECONDARYEMAIL'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@secondaryemail WHERE ENTITYID=@recid AND COLUMNMAP='SECONDARYEMAIL'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('2'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'SECONDARYEMAIL', 'Other', @secondaryemail,'CONTACT')
                    END
                    END
                    IF (UPDATE(EMAIL3))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'EMAIL3') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@email3 is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL3'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@email3 WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL3'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('3'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'EMAIL3', 'Other', @email3,'CONTACT')
                    END
                    END



                    IF (NOT UPDATE(CHANGEKEY))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))
                    END

                    if (NOT UPDATE(APPID))
                    BEGIN
                    SET @afterappid = @sysappid
                    END
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'

                    --UPDATE SYSDBA.CONTACT SET GLOBALSYNCID = @globalsyncid, APPID = @afterappid, TICK = @nexttick WHERE CONTACTID = @recid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    SELECT @reccount = count(1) FROM sysdba.GLOBALCHANGETRACKING WITH (NOLOCK) WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @recid)
                    END

                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @recid, 0, @user, GETUTCDATE(), @afterappid, @nexttick, @globalsyncid)

                    FETCH NEXT from ContUpdCursor INTO @recid, @user, @globalsyncid, @afterappid, @workphone, @homephone, @fax, @mobile, @pager, @other, @email, @secondaryemail, @email3, @changekey
                    END -- while

                    CLOSE ContUpdCursor
                    DEALLOCATE ContUpdCursor
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>CONTACT_INTEGRATION_CHANGE Trigger Update (ANSI)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_de763f86-4200-4f60-ba1a-a333f3b94ecf_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_de763f86-4200-4f60-ba1a-a333f3b94ecf_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:CONTACT_INTEGRATION_CHANGE (MSSQL)</Caption>
            <ActionData>
              <ActionId>de763f86-4200-4f60-ba1a-a333f3b94ecf</ActionId>
              <ActionTitle>CONTACT_INTEGRATION_CHANGE</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[sysdba].[CONTACT_INTEGRATION_CHANGE]'))
                    DROP TRIGGER [sysdba].[CONTACT_INTEGRATION_CHANGE]
                  </Statement>
                  <Title>Remove Existing View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[CONTACT_INTEGRATION_CHANGE] ON [sysdba].[CONTACT]
                    FOR UPDATE NOT FOR REPLICATION
                    AS
                    BEGIN
                    SET NOCOUNT ON
                    DECLARE @globalsyncid   NVARCHAR(36)
                    DECLARE @changekey      NVARCHAR(36)
                    DECLARE @recid          NCHAR(12)
                    DECLARE @user     NCHAR(12)
                    DECLARE @sysappid       NCHAR(12)
                    DECLARE @afterappid     NCHAR(12)
                    DECLARE @workphone   NVARCHAR(32)
                    DECLARE @homephone   NVARCHAR(32)
                    DECLARE @fax     NVARCHAR(32)
                    DECLARE @mobile    NVARCHAR(32)
                    DECLARE @pager          NVARCHAR(32)
                    DECLARE @other          NVARCHAR(32)
                    DECLARE @email    NVARCHAR(128)
                    DECLARE @secondaryemail NVARCHAR(128)
                    DECLARE @email3    NVARCHAR(128)
                    DECLARE @nexttick    int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int
                    SELECT @nestlevel = TRIGGER_NESTLEVEL()
                    DECLARE ContUpdCursor CURSOR FOR SELECT CONTACTID,MODIFYUSER,GLOBALSYNCID,APPID,WORKPHONE,HOMEPHONE,FAX,MOBILE,PAGER,OTHERPHONE,EMAIL,SECONDARYEMAIL,EMAIL3,CHANGEKEY FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN ContUpdCursor
                    FETCH NEXT from ContUpdCursor INTO @recid, @user, @globalsyncid, @afterappid, @workphone, @homephone, @fax, @mobile, @pager, @other, @email, @secondaryemail, @email3, @changekey
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    IF (@nestlevel &gt; 1)
                    BREAK

                    IF (@globalsyncid is null)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    END


                    -- update email and phone tables
                    IF (UPDATE(WORKPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'WORKPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@workphone is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='WORKPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@workphone WHERE ENTITYID=@recid AND COLUMNMAP='WORKPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('1'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'WORKPHONE', 'BusinessPhone', @workphone,'CONTACT')
                    END
                    END
                    IF (UPDATE(HOMEPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'HOMEPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@homephone is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='HOMEPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@homephone WHERE ENTITYID=@recid AND COLUMNMAP='HOMEPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('2'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'HOMEPHONE', 'PersonalPhone', @homephone,'CONTACT')
                    END
                    END
                    IF (UPDATE(FAX))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'FAX') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@fax is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='FAX'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@fax WHERE ENTITYID=@recid AND COLUMNMAP='FAX'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('3'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'FAX', 'BusinessFax', @fax,'CONTACT')
                    END
                    END
                    IF (UPDATE(MOBILE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'MOBILE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@mobile is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='MOBILE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@mobile WHERE ENTITYID=@recid AND COLUMNMAP='MOBILE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('4'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'MOBILE', 'BusinessMobile', @mobile,'CONTACT')
                    END
                    END
                    IF (UPDATE(PAGER))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'PAGER') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@pager is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='PAGER'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@pager WHERE ENTITYID=@recid AND COLUMNMAP='PAGER'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('5'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'PAGER', 'Pager', @pager,'CONTACT')
                    END
                    END
                    IF (UPDATE(OTHERPHONE))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPPHONENUMBER WHERE (COLUMNMAP = 'OTHERPHONE') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@other is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPPHONENUMBER WHERE ENTITYID=@recid AND COLUMNMAP='OTHERPHONE'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPPHONENUMBER SET TEXT=@other WHERE ENTITYID=@recid AND COLUMNMAP='OTHERPHONE'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPPHONENUMBER (ERPPHONENUMBERID,GLOBALSYNCID,ENTITYID,COLUMNMAP,PHONETYPE,TEXT,ENTITYTYPE) VALUES
                    ('6'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'OTHERPHONE', 'OtherPhone', @other,'CONTACT')
                    END
                    END
                    IF (UPDATE(EMAIL))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'EMAIL') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@email is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@email WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('1'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'EMAIL', 'Business', @email,'CONTACT')
                    END
                    END
                    IF (UPDATE(SECONDARYEMAIL))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'SECONDARYEMAIL') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@secondaryemail is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='SECONDARYEMAIL'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@secondaryemail WHERE ENTITYID=@recid AND COLUMNMAP='SECONDARYEMAIL'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('2'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'SECONDARYEMAIL', 'Other', @secondaryemail,'CONTACT')
                    END
                    END
                    IF (UPDATE(EMAIL3))
                    BEGIN
                    SELECT @reccount = count(1) FROM sysdba.ERPEMAILADDRESS WHERE (COLUMNMAP = 'EMAIL3') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    IF (@email3 is null)
                    BEGIN
                    DELETE FROM SYSDBA.ERPEMAILADDRESS WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL3'
                    END ELSE BEGIN
                    UPDATE SYSDBA.ERPEMAILADDRESS SET ADDRESS=@email3 WHERE ENTITYID=@recid AND COLUMNMAP='EMAIL3'
                    END
                    END ELSE BEGIN
                    INSERT INTO SYSDBA.ERPEMAILADDRESS (ERPEMAILADDRESSID,GLOBALSYNCID,ENTITYID,COLUMNMAP,EMAILTYPE,ADDRESS,ENTITYTYPE) VALUES
                    ('3'+SUBSTRING(@recid,1,5) + SUBSTRING(@recid,7,6), Cast(newid() as varchar(36)), @recid, 'EMAIL3', 'Other', @email3,'CONTACT')
                    END
                    END



                    IF (NOT UPDATE(CHANGEKEY))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))
                    END

                    if (NOT UPDATE(APPID))
                    BEGIN
                    SET @afterappid = @sysappid
                    END
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'

                    --UPDATE SYSDBA.CONTACT SET GLOBALSYNCID = @globalsyncid, APPID = @afterappid, TICK = @nexttick WHERE CONTACTID = @recid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    SELECT @reccount = count(1) FROM sysdba.GLOBALCHANGETRACKING WITH (NOLOCK) WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @recid)
                    IF (@reccount &gt; 0)
                    BEGIN
                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @recid)
                    END

                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @recid, 0, @user, GETUTCDATE(), @afterappid, @nexttick, @globalsyncid)

                    FETCH NEXT from ContUpdCursor INTO @recid, @user, @globalsyncid, @afterappid, @workphone, @homephone, @fax, @mobile, @pager, @other, @email, @secondaryemail, @email3, @changekey
                    END -- while

                    CLOSE ContUpdCursor
                    DEALLOCATE ContUpdCursor
                    SET NOCOUNT OFF
                    END


                  </Statement>
                  <Title>CONTACT_INTEGRATION_CHANGE Trigger Update (Unicode)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015A.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015A.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Funnel Chart (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015A</PluginId>
            <Name>Funnel Chart</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015B.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015B.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Line Chart (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015B</PluginId>
            <Name>Line Chart</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_546411a3-d9ba-46b3-a457-bdfdebdfa1f0_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_546411a3-d9ba-46b3-a457-bdfdebdfa1f0_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_INSERT (MSSQL)</Caption>
            <ActionData>
              <ActionId>546411a3-d9ba-46b3-a457-bdfdebdfa1f0</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_INSERT_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_INSERT]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_INSERT]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_INSERT] ON [sysdba].[ADDRESS]
                    FOR INSERT NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int

                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))

                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_INSERT Trigger (ANSI)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_ddccef51-6fe0-4fe6-9d7e-356ce0b14630_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_ddccef51-6fe0-4fe6-9d7e-356ce0b14630_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_INSERT (MSSQL)</Caption>
            <ActionData>
              <ActionId>ddccef51-6fe0-4fe6-9d7e-356ce0b14630</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_INSERT</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_INSERT]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_INSERT]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_INSERT] ON [sysdba].[ADDRESS]
                    FOR INSERT NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int

                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))

                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_INSERT Trigger (Unicode)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_c1206e2d-34e3-49cf-a4ab-d0a01850448b_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_c1206e2d-34e3-49cf-a4ab-d0a01850448b_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_DELETE (MSSQL)</Caption>
            <ActionData>
              <ActionId>c1206e2d-34e3-49cf-a4ab-d0a01850448b</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_DELETE_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_DELETE]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_DELETE]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_DELETE] ON [sysdba].[ADDRESS]
                    FOR DELETE NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int

                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM DELETED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))

                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_DELETE Trigger (ANSI)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_85f97d57-3e51-4a4a-ac04-8c3f1cb36cd1_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_85f97d57-3e51-4a4a-ac04-8c3f1cb36cd1_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_DELETE (MSSQL)</Caption>
            <ActionData>
              <ActionId>85f97d57-3e51-4a4a-ac04-8c3f1cb36cd1</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_DELETE</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_DELETE]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_DELETE]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_DELETE] ON [sysdba].[ADDRESS]
                    FOR DELETE NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int

                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM DELETED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))

                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_DELETE Trigger (Unicode)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_dff1ba3d-0a31-405c-9e64-d05a50b59083_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_dff1ba3d-0a31-405c-9e64-d05a50b59083_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_CHANGE (MSSQL)</Caption>
            <ActionData>
              <ActionId>dff1ba3d-0a31-405c-9e64-d05a50b59083</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_CHANGE_A</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_CHANGE]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_CHANGE]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_CHANGE] ON [sysdba].[ADDRESS]
                    FOR UPDATE NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int
                    SELECT @nestlevel = TRIGGER_NESTLEVEL()

                    IF (@nestlevel &lt;= 1)
                    BEGIN
                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    IF (@globalsyncid is null)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid
                    END

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))
                    -- before and after appid must be unchanged
                    IF ((NOT UPDATE(APPID)) OR (@afterappid IS NULL AND NOT EXISTS(SELECT * FROM deleted)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'

                    --UPDATE SYSDBA.CONTACT SET APPID = @sysappid, TICK = @nexttick WHERE CONTACTID = @entityid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    -- before and after appid must be unchanged
                    IF ((NOT UPDATE(APPID)) OR (@afterappid IS NULL AND NOT EXISTS(SELECT * FROM deleted)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'

                    --UPDATE SYSDBA.ACCOUNT SET APPID = @sysappid, TICK = @nexttick WHERE ACCOUNTID = @entityid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    END
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_CHANGE Trigger (ANSI)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Ansi</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_6308900a-3cfd-4867-90c6-573a43973b2d_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_6308900a-3cfd-4867-90c6-573a43973b2d_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ADDRESS_INTEGRATION_CHANGE (MSSQL)</Caption>
            <ActionData>
              <ActionId>6308900a-3cfd-4867-90c6-573a43973b2d</ActionId>
              <ActionTitle>ADDRESS_INTEGRATION_CHANGE</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID('[sysdba].[ADDRESS_INTEGRATION_CHANGE]'))
                    DROP TRIGGER [sysdba].[ADDRESS_INTEGRATION_CHANGE]
                  </Statement>
                  <Title>Remove Existing Trigger</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE TRIGGER [sysdba].[ADDRESS_INTEGRATION_CHANGE] ON [sysdba].[ADDRESS]
                    FOR UPDATE NOT FOR REPLICATION
                    AS
                    BEGIN

                    SET NOCOUNT ON
                    DECLARE @globalsyncid   varchar(36)
                    DECLARE @changekey      varchar(36)
                    DECLARE @recid          char(12)
                    DECLARE @entityid       char(12)
                    DECLARE @user			 char(12)
                    DECLARE @sysappid	      char(12)
                    DECLARE @afterappid	  char(12)
                    DECLARE @nexttick		  int
                    DECLARE @reccount       int
                    DECLARE @nestlevel      int
                    SELECT @nestlevel = TRIGGER_NESTLEVEL()

                    IF (@nestlevel &lt;= 1)
                    BEGIN
                    DECLARE AddrCursor CURSOR FOR SELECT ADDRESSID,ENTITYID,APPID,MODIFYUSER,GLOBALSYNCID FROM INSERTED
                    SELECT  @sysappid = appid FROM sysdba.SYSTEMINFO WITH (NOLOCK) WHERE SYSTEMINFOID = 'PRIMARY'

                    OPEN AddrCursor
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    WHILE (@@FETCH_STATUS = 0)
                    BEGIN
                    IF (@globalsyncid is null)
                    BEGIN
                    SET @globalsyncid = Cast(newid() as varchar(36))
                    UPDATE SYSDBA.ADDRESS SET GLOBALSYNCID = @globalsyncid WHERE ADDRESSID = @recid
                    END

                    IF ((SUBSTRING(@entityid,1,1) = 'C') AND (EXISTS(SELECT CONTACTID FROM SYSDBA.CONTACT WITH (NOLOCK) WHERE CONTACTID = @entityid)))
                    BEGIN
                    SET @changekey = Cast(newid() as varchar(36))
                    -- before and after appid must be unchanged
                    IF ((NOT UPDATE(APPID)) OR (@afterappid IS NULL AND NOT EXISTS(SELECT * FROM deleted)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'CONTACT'

                    --UPDATE SYSDBA.CONTACT SET APPID = @sysappid, TICK = @nexttick WHERE CONTACTID = @entityid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'CONTACT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'CONTACT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'CONTACT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END
                    END ELSE IF ((SUBSTRING(@entityid,1,1) = 'A') AND (EXISTS(SELECT ACCOUNTID FROM SYSDBA.ACCOUNT WITH (NOLOCK) WHERE ACCOUNTID = @entityid AND GLOBALSYNCID IS NOT NULL)))
                    BEGIN
                    -- before and after appid must be unchanged
                    IF ((NOT UPDATE(APPID)) OR (@afterappid IS NULL AND NOT EXISTS(SELECT * FROM deleted)))
                    BEGIN
                    SELECT @nexttick = tick FROM sysdba.SYNCDIGEST WITH (NOLOCK) WHERE APPID = @sysappid and RESOURCETYPE = 'ACCOUNT'

                    --UPDATE SYSDBA.ACCOUNT SET APPID = @sysappid, TICK = @nexttick WHERE ACCOUNTID = @entityid
                    UPDATE SYSDBA.SYNCDIGEST SET TICK = TICK +1 WHERE APPID = @sysappid AND RESOURCETYPE = 'ACCOUNT'

                    DELETE sysdba.GLOBALCHANGETRACKING WHERE (TABLENAME = 'ACCOUNT') and (ENTITYID = @entityid) and (CHANGETYPE = 0)
                    SET @changekey = Cast(newid() as varchar(36))
                    -- insert new record into GLOBALCHANGETRACKING table
                    INSERT INTO sysdba.GLOBALCHANGETRACKING (CHANGEKEY, TABLENAME, ENTITYID, CHANGETYPE, USERID, CREATEDATE, APPID, DIGESTTICK, GLOBALSYNCID)
                    VALUES (@changekey, 'ACCOUNT', @entityid, 0, @user, GETUTCDATE(), @sysappid, @nexttick, @globalsyncid)
                    END
                    END -- else if
                    FETCH NEXT from AddrCursor INTO @recid, @entityid, @afterappid, @user, @globalsyncid
                    END -- while

                    CLOSE AddrCursor
                    DEALLOCATE AddrCursor
                    END
                    SET NOCOUNT OFF
                    END
                  </Statement>
                  <Title>ADDRESS_INTEGRATION_CHANGE Trigger (Unicode)</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Unicode</EncodingTarget>
              <DbObjectType>Trigger</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015C.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015C.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Todays Activities (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015C</PluginId>
            <Name>Todays Activities</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_2ab91fed-9146-410c-b39b-473c2e5bf6bb_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_2ab91fed-9146-410c-b39b-473c2e5bf6bb_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:DeletePickListItem (All)</Caption>
            <ActionData>
              <ActionId>2ab91fed-9146-410c-b39b-473c2e5bf6bb</ActionId>
              <ActionTitle>DeletePickListItem</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>DELETE FROM SYSDBA.PICKLIST WHERE ITEMID='k6UJ9A0003NY' AND PICKLISTID = 'kSYST0000388'</Statement>
                  <Title>DeletePickListItem</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\PERIOD_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\PERIOD_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into PERIOD</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>PERIOD</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>PERIODID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>DEFAULT</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\EXCHANGERATE_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\EXCHANGERATE_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into EXCHANGERATE</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>EXCHANGERATE</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Query</SelectionType>
            <PrimaryKeyName>EXCHANGERATEID</PrimaryKeyName>
            <PrimaryKeyValues />
            <Query>
              <clauses>
                <clause groupChange="0" field="CURRENCYCODE" inverted="false" operator="=" value="BGN" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="CZK" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="DKK" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="HUF" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="LTL" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="LVL" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="PLN" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="RON" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="SEK" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="NOK" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="HRK" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="RUB" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="TRY" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="BRL" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="IDR" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="ILS" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="PHP" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="THB" />
                <clause groupChange="0" logicalOperator="Or" field="CURRENCYCODE" inverted="false" operator="=" value="ISK" />
              </clauses>
            </Query>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\PROVIDER_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\PROVIDER_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into PROVIDER</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>PROVIDER</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>PROVIDERID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>EXRATEPROV01</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5ccef18c-9a18-4fc3-816d-51de936a16a6_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5ccef18c-9a18-4fc3-816d-51de936a16a6_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ExchangeRate (All)</Caption>
            <ActionData>
              <ActionId>5ccef18c-9a18-4fc3-816d-51de936a16a6</ActionId>
              <ActionTitle>ExchangeRate</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE EXCHANGERATE SET PERIODID='QDEMOA01F8WJ',CURRENCYACTIVE='T',PROVIDERNAME='ADMIN',AUTOMATICDOWNLOAD= 'T',DOWNLOADCOMPLETE='F'</Statement>
                  <Title>UpdateExistingExchangeRatesPeriod</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>UPDATE EXCHANGERATE SET CURRENCYACTIVE='F', DESCRIPTION='Russian Ruble, pre-1998' WHERE CURRENCYCODE='RUR'</Statement>
                  <Title>DeActivateOldRUR</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_83cf1d21-394d-4204-9c01-bf21195336261_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_83cf1d21-394d-4204-9c01-bf21195336261_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Drop EXCHANGERATE_PK Index (Oracle)</Caption>
            <ActionData>
              <ActionId>83cf1d21-394d-4204-9c01-bf21195336261</ActionId>
              <ActionTitle>Drop EXCHANGERATE_PK Index</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>DROP INDEX EXCHANGERATE_PK</Statement>
                  <Title>DropEXCHANGERATE_PKResult</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>true</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015D.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015D.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] EXCHANGERATE:All Exchange Rates (Infor 8.4)</Caption>
            <PluginId>pDEMOA00015D</PluginId>
            <Name>All Exchange Rates</Name>
            <Family>EXCHANGERATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015E.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015E.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PERIOD:All Periods (INFOR 8.4)</Caption>
            <PluginId>pDEMOA00015E</PluginId>
            <Name>All Periods</Name>
            <Family>PERIOD</Family>
            <PluginType>Group</PluginType>
            <Company>INFOR</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015F.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015F.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PERIOD:All Currencies (INFOR 8.4)</Caption>
            <PluginId>pDEMOA00015F</PluginId>
            <Name>All Currencies</Name>
            <Family>PERIOD</Family>
            <PluginType>Group</PluginType>
            <Company>INFOR</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015G.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015G.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PRODUCT:Available Products (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015G</PluginId>
            <Name>Available Products</Name>
            <Family>PRODUCT</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_47a8efe5-9591-4e30-bd9b-30f70a8ec24c_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_47a8efe5-9591-4e30-bd9b-30f70a8ec24c_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListView (MSSQL)</Caption>
            <ActionData>
              <ActionId>47a8efe5-9591-4e30-bd9b-30f70a8ec24c</ActionId>
              <ActionTitle>PickListView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListView]'))
                    DROP VIEW [sysdba].[PickListView]
                  </Statement>
                  <Title>Drop View PickListView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickListView] as
                    (
                    SELECT PL.ItemID as PicklistId, PL.TEXT as PicklistName, PL.ShortText as Attributes, PL.LANGUAGECODE as DefaultLanguage,
                    Pl.DefaultIndex, Pl.DefaultCode, PL.CreateDate, PL.CreateUser, PL.ModifyDate, PL.ModifyUser
                    FROM sysdba.PICKLIST PL
                    WHERE PL.PICKLISTID = 'PICKLISTLIST'
                    )
                  </Statement>
                  <Title>Create View PickListView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_6f7b78fc-7c02-4da3-bcf6-7981851f8b51_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_6f7b78fc-7c02-4da3-bcf6-7981851f8b51_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItemView (MSSQL)</Caption>
            <ActionData>
              <ActionId>6f7b78fc-7c02-4da3-bcf6-7981851f8b51</ActionId>
              <ActionTitle>PickListItemView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListItemView]'))
                    DROP VIEW [sysdba].[PickListItemView]
                  </Statement>
                  <Title>Drop View PickListItemView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE view [sysdba].[PickListItemView] as
                    (
                    SELECT PL.ItemID as PicklistItemId, PL.PicklistId,  PL.TEXT , PL.ShortText as Code, PL.LANGUAGECODE as LanguageCode,
                    PL.FILTER as Filter, Pl.Id as OrderSeq, PL.UserId, PL.CreateDate, PL.CreateUser, PL.ModifyDate, PL.ModifyUser
                    FROM sysdba.PICKLIST PL
                    WHERE PL.PICKLISTID &lt;&gt; 'PICKLISTLIST'
                    )
                  </Statement>
                  <Title>Create View PickListItemView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_e9dc7cc5-f7d1-448e-81b5-9e5ff9e1d111_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_e9dc7cc5-f7d1-448e-81b5-9e5ff9e1d111_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickList_ActiveLanguageView (MSSQL)</Caption>
            <ActionData>
              <ActionId>e9dc7cc5-f7d1-448e-81b5-9e5ff9e1d111</ActionId>
              <ActionTitle>PickList_ActiveLanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListItem_ActiveLanguageView]'))
                    DROP VIEW [sysdba].[PickListItem_ActiveLanguageView]
                  </Statement>
                  <Title>remove view PickListItem_ActiveLanguageView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickList_ActiveLanguageView] as
                    (
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTRING(LanguageCode, 0, CHARINDEX('-',LanguageCode,0))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and CHARINDEX('-',LanguageCode,0) &gt; 0
                    group by LanguageCode
                    union
                    select null -- for languages not in the list?
                    )
                  </Statement>
                  <Title>create view [PickList_ActiveLanguageView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_77461a81-cf26-4372-adef-0256b144746e_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_77461a81-cf26-4372-adef-0256b144746e_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_BaseLanguageView (MSSQL)</Caption>
            <ActionData>
              <ActionId>77461a81-cf26-4372-adef-0256b144746e</ActionId>
              <ActionTitle>PickListItem_BaseLanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListItem_BaseLanguageView]'))
                    DROP VIEW [sysdba].[PickListItem_BaseLanguageView]
                  </Statement>
                  <Title>remove view [PickListItem_BaseLanguageView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickListItem_BaseLanguageView] as (
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and CHARINDEX('-',LTRIM(baseItem.LanguageCode),0) = 0
                    )
                  </Statement>
                  <Title>create view [PickListItem_BaseLanguageView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_dc4daa36-b413-48ea-843c-d36f8b751687_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_dc4daa36-b413-48ea-843c-d36f8b751687_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_LanguageMapView (MSSQL)</Caption>
            <ActionData>
              <ActionId>dc4daa36-b413-48ea-843c-d36f8b751687</ActionId>
              <ActionTitle>PickListItem_LanguageMapView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListItem_LanguageMapView]'))
                    DROP VIEW [sysdba].[PickListItem_LanguageMapView]
                  </Statement>
                  <Title>remove view [PickListItem_LanguageMapView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickListItem_LanguageMapView] as
                    (
                    /*
                    * -Pair the base(and default) text values available
                    *	through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */
                    select Coalesce(base.CompositeKey, '')+':'+Coalesce(lang.LanguageCode,'') CompositeKey,
                    lang.LanguageCode rlanguage,
                    base.PickListId, base.Name, base.baseItemId, base.Code, base.text, base.BaseLanguage, base.DefaultLanguage, base.defaultItemId, base.DefaultText, base.Filter, base.OrderSeq
                    from (/*PickList_ActiveLanguageView*/
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTRING(LanguageCode, 0, CHARINDEX('-',LanguageCode,0))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and CHARINDEX('-',LanguageCode,0) &gt; 0
                    group by LanguageCode
                    union
                    select null -- for languages not in the list?
                    ) lang,
                    /*PickListItem_BaseLanguageView*/(
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and CHARINDEX('-',LTRIM(baseItem.LanguageCode),0) = 0
                    ) base
                    )
                  </Statement>
                  <Title>create view [PickListItem_LanguageMapView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_df9ded06-fcf4-4337-869a-4b74945f1fcf_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_df9ded06-fcf4-4337-869a-4b74945f1fcf_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_LanguageView (MSSQL)</Caption>
            <ActionData>
              <ActionId>df9ded06-fcf4-4337-869a-4b74945f1fcf</ActionId>
              <ActionTitle>PickListItem_LanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickListItem_LanguageView]'))
                    DROP VIEW [sysdba].[PickListItem_LanguageView]
                  </Statement>
                  <Title>remove view [PickListItem_LanguageView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickListItem_LanguageView] as
                    (
                    /*
                    * Nestled the query inside a select group by because duplicates may occur due to the different combinations of map.Text and item.Text, and
                    * defaultLanguage and BaseLangauge groupings.
                    * Coalesce used because rLanguage value could be null and would cause the whole CompositeKey to be null.
                    */
                    select Coalesce(PICKLISTID,'')+ ':' + Coalesce(name,'') + ':' + Coalesce(code,'') + ':' + Coalesce(rlanguage,'') CompositeKey, PICKLISTID, name, code, rlanguage, TextUsed, ItemIdUsed, OrderSeq, Filter, USERID, DEFAULTINDEX, DEFAULTCODE
                    from(
                    /*
                    * -Pairs the mapping of base and default values to an actual picklist item.
                    *  This completes the language fallback, because we already have the base and default
                    *  values mapped to every active language (and culture) code. The query will return
                    *  the default value, the base language (no culture code) value, and the requested language
                    *  value. With this joins in place, the select statement just need to contain logic to choose
                    *  the correct text value according to the fallback which is
                    *		1) requested language(and culture)
                    *		2) base language (no culuture code)
                    *		3) default pick list language(and culture)
                    *
                    *	so look for 1, if 1 is null or does not exists, then fallback to 2,
                    *		if 2 is null or does not exists, then fallback to 3.
                    *
                    *  -This is the a language conscience version of PickListItemView.
                    *  -To get a list of items for a picklist a language(and culture) code will need to be provided,
                    *    with the usual picklistid
                    */
                    select map.PICKLISTID, map.name, map.code, map.rlanguage, map.OrderSeq, map.Filter, map.DEFAULTINDEX, map.DEFAULTCODE, map.UserId,
                    case when COALESCE(item.LANGUAGECODE,'-----') = map.rlanguage then
                    item.Text
                    else
                    case when  COALESCE(SUBSTRING(map.rLanguage, 0, CHARINDEX('-',map.rLanguage,0)),'-----') = map.BaseLanguage then
                    map.text
                    else
                    map.defaultText
                    end
                    end TextUsed,
                    case when COALESCE(item.LANGUAGECODE,'-----') = map.rlanguage then
                    item.ITEMID
                    else
                    case when  COALESCE(SUBSTRING(map.rLanguage, 0, CHARINDEX('-',map.rLanguage,0)),'-----') = map.BaseLanguage then
                    map.baseItemId
                    else
                    map.defaultItemId
                    end
                    end ItemIdUsed
                    from (/*PickListItem_LanguageMapView*/
                    /*
                    * -Pair the base(and default) text values available
                    *	through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */
                    select Coalesce(base.CompositeKey, '')+':'+Coalesce(lang.LanguageCode,'') CompositeKey,
                    lang.LanguageCode rlanguage,
                    base.PickListId, base.Name, base.baseItemId, base.Code, base.text, base.BaseLanguage, base.DefaultLanguage, base.defaultItemId, base.DefaultText, base.Filter, base.OrderSeq, base.DEFAULTINDEX, base.DEFAULTCODE, base.USERID
                    from ( /*PickList_ActiveLanguageView*/
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTRING(LanguageCode, 0, CHARINDEX('-',LanguageCode,0))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and CHARINDEX('-',LanguageCode,0) &gt; 0
                    group by LanguageCode
                    union
                    select null -- for languages not in the list?
                    ) lang,
                    /*PickListItem_BaseLanguageView*/
                    (
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'')+':'+Coalesce(item.SHORTTEXT,'')+':'+Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq,
                    head.DefaultIndex,
                    head.DEFAULTCODE,
                    head.USERID
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and CHARINDEX('-',LTRIM(baseItem.LanguageCode),0) = 0
                    ) base
                    ) map left join sysdba.picklist item on map.PICKLISTID = item.PICKLISTID and map.Code = item.SHORTTEXT and map.rlanguage = item.LANGUAGECODE
                    ) a
                    group by PICKLISTID, name, code, rlanguage, TextUsed, ItemIdUsed, OrderSeq, Filter, DEFAULTINDEX, DEFAULTCODE, USERID
                    )
                  </Statement>
                  <Title>create view [PickListItem_LanguageView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_c723a6fa-3c9d-4b3f-868e-8d1139d4dcce_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_c723a6fa-3c9d-4b3f-868e-8d1139d4dcce_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickList_FlatView (MSSQL)</Caption>
            <ActionData>
              <ActionId>c723a6fa-3c9d-4b3f-868e-8d1139d4dcce</ActionId>
              <ActionTitle>PickList_FlatView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[PickList_FlatView]'))
                    DROP VIEW [sysdba].[PickList_FlatView]
                  </Statement>
                  <Title>remove view [PickList_FlatView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    create view [sysdba].[PickList_FlatView] as
                    (
                    /*
                    * -Pair the base(and default) text values available
                    *	through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */									(
                    select Coalesce(h.PickListName,'')+':'+Coalesce(h.PickListId,'')+':'+Coalesce(i.itemID,'')+':'+Coalesce(i.ShortText,'') CompositeKey,
                    h.PickListName PickListName, h.PickListId PickListId, h.Attributes attr, h.LANGUAGECODE defaultLanguage,
                    case when Coalesce(h.DEFAULTCODE,'-------')='-------' then h.PredictedDefaultCode else h.DEFAULTCODE end DefaultCode, h.DEFAULTINDEX DefaultIndex,
                    i.Text value, i.ShortText code, i.ITEMID itemId, i.Filter, i.LANGUAGECODE, i.id OrderSeq
                    From (
                    select h.itemID PICKLISTID, h.TEXT PicklistName, h.SHORTTEXT Attributes, h.LANGUAGECODE, h.DefaultIndex, h.DefaultCode, h.CreateDate, h.CreateUser, h.ModifyDate, h.ModifyUser,
                    Max(i.SHORTTEXT) PredictedDefaultCode -- incase there are duplicates this is how they get widdled to one record.
                    From (select * from sysdba.picklist where PickListID='PICKLISTLIST') h left join sysdba.picklist i
                    on h.itemID = i.PickListId and h.DEFAULTINDEX=i.id
                    group by h.itemID, h.TEXT, h.SHORTTEXT, h.LANGUAGECODE, h.DefaultIndex, h.DefaultCode, h.CreateDate, h.CreateUser, h.ModifyDate, h.ModifyUser
                    ) h left join sysdba.picklist i
                    on h.PickListId = i.PickListId)
                    )
                  </Statement>
                  <Title>create view [PickList_FlatView]</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CreateFieldAction, Sage.SalesLogix.BundleModel.BundleActions">
          <CreateFieldAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\CreateField\PICKLIST.DEFAULTCODE.xml</ItemId>
            <Url>\Actions\Schema\CreateField\PICKLIST.DEFAULTCODE.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Field PICKLIST.DEFAULTCODE</Caption>
            <ColumnTypeName>Sage.SalesLogix.SchemaSupport.SlxDataColumn, Sage.SalesLogix.SchemaSupport</ColumnTypeName>
            <TableName>PICKLIST</TableName>
            <FieldName>DEFAULTCODE</FieldName>
          </CreateFieldAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_8b3c0bc0-bcdf-4fe6-b3ca-3f6c7d1b7581_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_8b3c0bc0-bcdf-4fe6-b3ca-3f6c7d1b7581_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListView (Oracle)</Caption>
            <ActionData>
              <ActionId>8b3c0bc0-bcdf-4fe6-b3ca-3f6c7d1b7581</ActionId>
              <ActionTitle>PickListView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickListView as
                    (
                    SELECT PL.ItemID as PicklistId, PL.TEXT as PicklistName, PL.ShortText as Attributes, PL.LANGUAGECODE as DefaultLanguage,
                    Pl.DefaultIndex, Pl.DefaultCode, PL.CreateDate, PL.CreateUser, PL.ModifyDate, PL.ModifyUser
                    FROM sysdba.PICKLIST PL
                    WHERE PL.PICKLISTID = 'PICKLISTLIST'
                    )
                  </Statement>
                  <Title>create or replace PickListView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_1d3f3b3d-fd31-41f4-870b-cf3bd8be33d3_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_1d3f3b3d-fd31-41f4-870b-cf3bd8be33d3_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItemView (Oracle)</Caption>
            <ActionData>
              <ActionId>1d3f3b3d-fd31-41f4-870b-cf3bd8be33d3</ActionId>
              <ActionTitle>PickListItemView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE or Replace view sysdba.PickListItemView as
                    (
                    SELECT PL.ItemID as PicklistItemId, PL.PicklistId,  PL.TEXT , PL.ShortText as Code, PL.LANGUAGECODE as LanguageCode,
                    PL.FILTER as Filter, Pl.Id as OrderSeq, PL.UserId, PL.CreateDate, PL.CreateUser, PL.ModifyDate, PL.ModifyUser
                    FROM sysdba.PICKLIST PL
                    WHERE PL.PICKLISTID &lt;&gt; 'PICKLISTLIST'
                    )
                  </Statement>
                  <Title>PickListItemView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_baa2e7df-ec37-495e-a552-db315410d17f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_baa2e7df-ec37-495e-a552-db315410d17f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickList_ActiveLanguageView (Oracle)</Caption>
            <ActionData>
              <ActionId>baa2e7df-ec37-495e-a552-db315410d17f</ActionId>
              <ActionTitle>PickList_ActiveLanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickList_ActiveLanguageView as
                    (
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTR(LanguageCode, 0, INSTR(LanguageCode, '-',0, 1))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and INSTR(LanguageCode, '-',0, 1) &gt; 0
                    group by LanguageCode
                    )
                  </Statement>
                  <Title>create or replace PickList_ActiveLanguageView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_ac74eb3f-5f36-48e3-89a6-3c796c3b2dd8_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_ac74eb3f-5f36-48e3-89a6-3c796c3b2dd8_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_BaseLanguageView (Oracle)</Caption>
            <ActionData>
              <ActionId>ac74eb3f-5f36-48e3-89a6-3c796c3b2dd8</ActionId>
              <ActionTitle>PickListItem_BaseLanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickListItem_BaseLanguageView as (
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'')||':'||Coalesce(item.SHORTTEXT,'')||':'||Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'')||':'||Coalesce(item.SHORTTEXT,'')||':'||Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and INSTR(LTRIM(baseItem.LanguageCode, '-'),0, 1) = 0
                    )
                  </Statement>
                  <Title>create or replace PickListItem_BaseLanguageView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_42f53970-c4e7-4b7f-be9c-e731f91c7b07_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_42f53970-c4e7-4b7f-be9c-e731f91c7b07_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_LanguageMapView (Oracle)</Caption>
            <ActionData>
              <ActionId>42f53970-c4e7-4b7f-be9c-e731f91c7b07</ActionId>
              <ActionTitle>PickListItem_LanguageMapView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickListItem_LanguageMapView as
                    (
                    /*
                    * -Pair the base(and default) text values available
                    *    through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */
                    select Coalesce(base.CompositeKey, '') || ':' || Coalesce(lang.LanguageCode,'') CompositeKey,
                    lang.LanguageCode rlanguage,
                    base.PickListId, base.Name, base.baseItemId, base.Code, base.text, base.BaseLanguage, base.DefaultLanguage, base.defaultItemId, base.DefaultText, base.Filter, base.OrderSeq
                    from (/*PickList_ActiveLanguageView*/
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTR(LanguageCode, 0, INSTR(LanguageCode,'-',0,1))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and INSTR(LanguageCode,'-',0,1) &gt; 0
                    group by LanguageCode
                    ) lang,
                    /*PickListItem_BaseLanguageView*/(
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'') || ':' || Coalesce(item.SHORTTEXT,'') || ':' || Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'') || ':' || Coalesce(item.SHORTTEXT,'') || ':' || Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and INSTR(LTRIM(baseItem.LanguageCode),'-',0,1) = 0
                    ) base )
                  </Statement>
                  <Title>create or replace PickListItem_LanguageMapView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_f8b70c85-ffea-4447-bdb0-350c0bc74186_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_f8b70c85-ffea-4447-bdb0-350c0bc74186_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickList_FlatView (Oracle)</Caption>
            <ActionData>
              <ActionId>f8b70c85-ffea-4447-bdb0-350c0bc74186</ActionId>
              <ActionTitle>PickList_FlatView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickList_FlatView as
                    (
                    /*
                    * -Pair the base(and default) text values available
                    *    through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */
                    select Coalesce(h.PickListName,'') || ':' || Coalesce(h.PickListId,'') || ':' || Coalesce(i.itemID,'') || ':' || Coalesce(i.ShortText,'') CompositeKey,
                    h.PickListName PickListName, h.PickListId PickListId, h.Attributes attr, h.LANGUAGECODE defaultLanguage,
                    case when Coalesce(h.DEFAULTCODE,'-------')='-------' then h.PredictedDefaultCode else h.DEFAULTCODE end DefaultCode, h.DEFAULTINDEX DefaultIndex,
                    i.Text value, i.ShortText code, i.ITEMID itemId, i.Filter, i.LANGUAGECODE, i.id OrderSeq
                    From (
                    select h.itemID PICKLISTID, h.TEXT PicklistName, h.SHORTTEXT Attributes, h.LANGUAGECODE, h.DefaultIndex, h.DefaultCode, h.CreateDate, h.CreateUser, h.ModifyDate, h.ModifyUser,
                    Max(i.SHORTTEXT) PredictedDefaultCode -- incase there are duplicates this is how they get widdled to one record.
                    From (select * from sysdba.picklist where PickListID='PICKLISTLIST') h left join sysdba.picklist i
                    on h.itemID = i.PickListId and h.DEFAULTINDEX=i.id
                    group by h.itemID, h.TEXT, h.SHORTTEXT, h.LANGUAGECODE, h.DefaultIndex, h.DefaultCode, h.CreateDate, h.CreateUser, h.ModifyDate, h.ModifyUser
                    ) h left join sysdba.picklist i
                    on h.PickListId = i.PickListId
                    )
                  </Statement>
                  <Title>create or replace PickList_FlatView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_9c8e3844-3887-42df-8a4a-7f2dbf812449_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_9c8e3844-3887-42df-8a4a-7f2dbf812449_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:PickListItem_LanguageView (Oracle)</Caption>
            <ActionData>
              <ActionId>9c8e3844-3887-42df-8a4a-7f2dbf812449</ActionId>
              <ActionTitle>PickListItem_LanguageView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    create or replace view sysdba.PickListItem_LanguageView as
                    (
                    /*
                    * Nestled the query inside a select group by because duplicates may occur due to the different combinations of map.Text and item.Text, and
                    * defaultLanguage and BaseLangauge groupings.
                    * Coalesce used because rLanguage value could be null and would cause the whole CompositeKey to be null.
                    */
                    select Coalesce(PICKLISTID,'') || ':' || Coalesce(name,'') || ':' || Coalesce(code,'') || ':' || Coalesce(rlanguage,'') CompositeKey, PICKLISTID, name, code, rlanguage, TextUsed, ItemIdUsed, OrderSeq, Filter, USERID, DEFAULTINDEX, DEFAULTCODE
                    from(
                    /*
                    * -Pairs the mapping of base and default values to an actual picklist item.
                    *  This completes the language fallback, because we already have the base and default
                    *  values mapped to every active language (and culture) code. The query will return
                    *  the default value, the base language (no culture code) value, and the requested language
                    *  value. With this joins in place, the select statement just need to contain logic to choose
                    *  the correct text value according to the fallback which is
                    *        1) requested language(and culture)
                    *        2) base language (no culuture code)
                    *        3) default pick list language(and culture)
                    *
                    *    so look for 1, if 1 is null or does not exists, then fallback to 2,
                    *        if 2 is null or does not exists, then fallback to 3.
                    *
                    *  -This is the a language conscience version of PickListItemView.
                    *  -To get a list of items for a picklist a language(and culture) code will need to be provided,
                    *    with the usual picklistid
                    */
                    select map.PICKLISTID, map.name, map.code, map.rlanguage, map.OrderSeq, map.Filter, map.DEFAULTINDEX, map.DEFAULTCODE, map.UserId,
                    case when COALESCE(item.LANGUAGECODE,'-----') = map.rlanguage then
                    item.Text
                    else
                    case when  COALESCE(SUBSTR(map.rLanguage, 0, INSTR(map.rLanguage,'-',0, 1)),'-----') = map.BaseLanguage then
                    map.text
                    else
                    map.defaultText
                    end
                    end TextUsed,
                    case when COALESCE(item.LANGUAGECODE,'-----') = map.rlanguage then
                    item.ITEMID
                    else
                    case when  COALESCE(SUBSTR(map.rLanguage, 0, INSTR(map.rLanguage,'-',0, 1)),'-----') = map.BaseLanguage then
                    map.baseItemId
                    else
                    map.defaultItemId
                    end
                    end ItemIdUsed
                    from (/*PickListItem_LanguageMapView*/
                    /*
                    * -Pair the base(and default) text values available
                    *    through any currently used language (and culture) codes.
                    *
                    * -Used in the view [PickListItem_LanguageView]
                    */
                    select Coalesce(base.CompositeKey, '') || ':' || Coalesce(lang.LanguageCode,'') CompositeKey,
                    lang.LanguageCode rlanguage,
                    base.PickListId, base.Name, base.baseItemId, base.Code, base.text, base.BaseLanguage, base.DefaultLanguage, base.defaultItemId, base.DefaultText, base.Filter, base.OrderSeq, base.DEFAULTINDEX, base.DEFAULTCODE, base.USERID
                    from ( /*PickList_ActiveLanguageView*/
                    /*
                    * -Creates a list of "active" languages in the picklist.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select LanguageCode
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----'
                    union
                    select SUBSTR(LanguageCode, 0, INSTR(LanguageCode,'-',0, 1))
                    from sysdba.picklist
                    where COALESCE(LanguageCode,'-----')&lt;&gt;'-----' and INSTR(LanguageCode,'-',0, 1) &gt; 0
                    group by LanguageCode
                    ) lang,
                    /*PickListItem_BaseLanguageView*/
                    (
                    /*
                    * -Pair language only codes and default language (and culture) codes
                    *  so they are available in one record.
                    *
                    * -Used in the view [PickListItem_LanguageMapView]
                    */
                    select case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then
                    Coalesce(item.PickListID,'') || ':' || Coalesce(item.SHORTTEXT,'') || ':' || Coalesce(baseItem.LanguageCode,'')
                    else
                    Coalesce(item.PickListID,'') || ':' || Coalesce(item.SHORTTEXT,'') || ':' || Coalesce(item.LANGUAGECODE,'')
                    end CompositeKey,
                    item.PickListID PickListId, head.Text Name, item.ShortText code,
                    COALESCE(baseItem.Text, item.Text) text,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.LanguageCode else item.LANGUAGECODE end BaseLanguage,
                    case when COALESCE(baseItem.Text, item.Text) = baseItem.Text then baseItem.itemID else item.itemID end BaseItemID,
                    item.itemID defaultItemID,
                    item.LANGUAGECODE defaultLanguage,
                    item.Text defaultText,
                    item.Filter,
                    item.id OrderSeq,
                    head.DefaultIndex,
                    head.DEFAULTCODE,
                    head.USERID
                    from sysdba.picklist head inner join sysdba.picklist item
                    on head.ItemId = item.PickListID and head.LANGUAGECODE = item.LANGUAGECODE
                    left join sysdba.picklist baseItem
                    on item.PicklistID=baseItem.PicklistID and item.SHORTTEXT=baseItem.SHORTTEXT
                    and baseItem.picklistID&lt;&gt;'PickListList' and INSTR(LTRIM(baseItem.LanguageCode),'-',0, 1) = 0
                    ) base
                    ) map left join sysdba.picklist item on map.PICKLISTID = item.PICKLISTID and map.Code = item.SHORTTEXT and map.rlanguage = item.LANGUAGECODE
                    ) a
                    group by PICKLISTID, name, code, rlanguage, TextUsed, ItemIdUsed, OrderSeq, Filter, DEFAULTINDEX, DEFAULTCODE, USERID
                    )
                  </Statement>
                  <Title>create or replace PickListItem_LanguageView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000449.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000449.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Calculation Methods]</Caption>
            <PickListId>kSYST0000449</PickListId>
            <PickListName>Calculation Methods</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000446.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000446.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [QuoteStatus]</Caption>
            <PickListId>kSYST0000446</PickListId>
            <PickListName>QuoteStatus</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000386.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000386.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [City]</Caption>
            <PickListId>kSYST0000386</PickListId>
            <PickListName>City</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000433.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000433.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [ErpQuoteStatus]</Caption>
            <PickListId>kSYST0000433</PickListId>
            <PickListName>ErpQuoteStatus</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000444.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000444.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [SyncStatus]</Caption>
            <PickListId>kSYST0000444</PickListId>
            <PickListName>SyncStatus</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000II.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000II.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [SearchClause]</Caption>
            <PickListId>kDEMOA0000II</PickListId>
            <PickListName>SearchClause</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000424.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000424.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [ErpAccountStatus]</Caption>
            <PickListId>kSYST0000424</PickListId>
            <PickListName>ErpAccountStatus</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000300.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000300.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Currency Codes]</Caption>
            <PickListId>kSYST0000300</PickListId>
            <PickListName>Currency Codes</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kSYST0000428.xml</ItemId>
            <Url>\Actions\InsertPickList\kSYST0000428.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [ErpInvoiceStatus]</Caption>
            <PickListId>kSYST0000428</PickListId>
            <PickListName>ErpInvoiceStatus</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000IZ.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000IZ.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Frequencies]</Caption>
            <PickListId>kDEMOA0000IZ</PickListId>
            <PickListName>Frequencies</PickListName>
            <ReplaceTargetList>false</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015H.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015H.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Group List (Infor 8.301)</Caption>
            <PluginId>pDEMOA00015H</PluginId>
            <Name>Group List</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015I.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015I.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] SYNCRESULT:AllSyncResults (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015I</PluginId>
            <Name>AllSyncResults</Name>
            <Family>SYNCRESULT</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_1b2ef18f-0a29-4578-9fa7-e239cb15c89d_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_1b2ef18f-0a29-4578-9fa7-e239cb15c89d_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPINVOICEVIEW (MSSQL)</Caption>
            <ActionData>
              <ActionId>1b2ef18f-0a29-4578-9fa7-e239cb15c89d</ActionId>
              <ActionTitle>ERPINVOICEVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[ERPINVOICEVIEW]'))
                    DROP VIEW [sysdba].[ERPINVOICEVIEW]
                  </Statement>
                  <Title>Remove ErpInvoice View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[ERPINVOICEVIEW] AS
                    SELECT   ERPINVOICEID, ACCOUNTID, INVOICENUMBER, ERPEXTERNALID, ERPACCOUNTINGENTITYID, DESCRIPTION, ERPSTATUS, ERPSTATUSDATE, GRANDTOTAL, ERPDOCUMENTDATE, SECCODEID, ERPEXTENDEDAMOUNT, DUEDATE, CASE WHEN DUEDATE &lt; GETDATE() AND (ERPSTATUS IN ('Open', 'PartialPaid'))
                    THEN DATEDIFF(DAY, DUEDATE, GETDATE()) ELSE 0 END AS DAYSLATE, CASE WHEN DUEDATE &lt; GETDATE() AND ERPSTATUS IN ('Open', 'PartialPaid') AND DATEDIFF(DAY, DUEDATE, GETDATE()) &gt; 120 THEN '120+' WHEN DUEDATE &lt; GETDATE() AND ERPSTATUS IN ('Open', 'PartialPaid') AND DATEDIFF(DAY, DUEDATE,
                    GETDATE()) &gt; 90 THEN '91-120' WHEN DUEDATE &lt; GETDATE() AND ERPSTATUS IN ('Open', 'PartialPaid') AND DATEDIFF(DAY, DUEDATE, GETDATE()) &gt; 60 THEN '61-90' WHEN DUEDATE &lt; GETDATE() AND ERPSTATUS IN ('Open', 'PartialPaid') AND DATEDIFF(DAY, DUEDATE, GETDATE())
                    &gt; 30 THEN '31-60' WHEN DUEDATE &lt; GETDATE() AND ERPSTATUS IN ('Open', 'PartialPaid') AND DATEDIFF(DAY, DUEDATE, GETDATE()) &gt; 1 THEN '1-30' ELSE NULL END AS DAYSLATECLASS, ERPBILLTOID, ERPSHIPTOID,CURRENCYCODE,ERPTOTALBASEAMOUNT
                    FROM     sysdba.ERPINVOICE
                  </Statement>
                  <Title>Create ErpInvoice View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015J.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015J.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Group List (Infor 8.308)</Caption>
            <PluginId>pDEMOA00015J</PluginId>
            <Name>Group List</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.308</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_38fd8179-4da8-4410-a610-4d168889283e_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_38fd8179-4da8-4410-a610-4d168889283e_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPINVOICEAGINGVIEW (MSSQL)</Caption>
            <ActionData>
              <ActionId>38fd8179-4da8-4410-a610-4d168889283e</ActionId>
              <ActionTitle>ERPINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[ERPINVOICEAGINGVIEW]'))
                    DROP VIEW [sysdba].[ERPINVOICEAGINGVIEW]
                  </Statement>
                  <Title>Remove ErpInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[ERPINVOICEAGINGVIEW] AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ACCOUNTID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ACCOUNTID
                  </Statement>
                  <Title>Create ErpInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_7169a932-7e51-4d2a-9ba6-75fd28d6434f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_7169a932-7e51-4d2a-9ba6-75fd28d6434f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPINVOICEVIEW (Oracle)</Caption>
            <ActionData>
              <ActionId>7169a932-7e51-4d2a-9ba6-75fd28d6434f</ActionId>
              <ActionTitle>ERPINVOICEVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE FORCE VIEW "SYSDBA"."ERPINVOICEVIEW" AS
                    SELECT ERPINVOICEID, ACCOUNTID,INVOICENUMBER,ERPEXTERNALID,ERPACCOUNTINGENTITYID,DESCRIPTION,ERPSTATUS,ERPSTATUSDATE,GRANDTOTAL,ERPDOCUMENTDATE,
                    SECCODEID,ERPEXTENDEDAMOUNT,DUEDATE,
                    CASE WHEN DUEDATE    &lt; sysdate
                    AND (ERPSTATUS IN ('Open', 'PartialPaid'))
                    THEN sysdate - DUEDATE
                    ELSE 0
                    END AS DAYSLATE,
                    CASE
                    WHEN DUEDATE                          &lt; sysdate
                    AND ERPSTATUS                        IN ('Open', 'PartialPaid')
                    AND sysdate - DUEDATE &gt; 120
                    THEN '120+'
                    WHEN DUEDATE                          &lt; sysdate
                    AND ERPSTATUS                        IN ('Open', 'PartialPaid')
                    AND sysdate - DUEDATE &gt; 90
                    THEN '91-120'
                    WHEN DUEDATE                          &lt; sysdate
                    AND ERPSTATUS                        IN ('Open', 'PartialPaid')
                    AND sysdate - DUEDATE &gt; 60
                    THEN '61-90'
                    WHEN DUEDATE                          &lt; sysdate
                    AND ERPSTATUS                        IN ('Open', 'PartialPaid')
                    AND sysdate - DUEDATE &gt; 30
                    THEN '31-60'
                    WHEN DUEDATE                          &lt; sysdate
                    AND ERPSTATUS                        IN ('Open', 'PartialPaid')
                    AND sysdate - DUEDATE &gt; 1
                    THEN '1-30'
                    ELSE NULL
                    END AS DAYSLATECLASS,
                    ERPBILLTOID,
                    ERPSHIPTOID,
                    CURRENCYCODE,
                    ERPTOTALBASEAMOUNT
                    FROM sysdba.ERPINVOICE

                  </Statement>
                  <Title>Create ErpInvoice Item</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>View</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_48ce1b68-ee2c-43f0-b37d-798f519ad0af_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_48ce1b68-ee2c-43f0-b37d-798f519ad0af_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPINVOICEAGINGVIEW (Oracle)</Caption>
            <ActionData>
              <ActionId>48ce1b68-ee2c-43f0-b37d-798f519ad0af</ActionId>
              <ActionTitle>ERPINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE FORCE VIEW "SYSDBA"."ERPINVOICEAGINGVIEW" AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ACCOUNTID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ACCOUNTID
                  </Statement>
                  <Title>Create ErpInvoiceAging view</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_79b24bfc-1437-48b7-8a34-913ba01a3ea3_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_79b24bfc-1437-48b7-8a34-913ba01a3ea3_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPBILLTOINVOICEAGINGVIEW (MSSQL)</Caption>
            <ActionData>
              <ActionId>79b24bfc-1437-48b7-8a34-913ba01a3ea3</ActionId>
              <ActionTitle>ERPBILLTOINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[ERPBILLTOINVOICEAGINGVIEW]'))
                    DROP VIEW [sysdba].[ERPBILLTOINVOICEAGINGVIEW]
                  </Statement>
                  <Title>Remove ErpBillToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[ERPBILLTOINVOICEAGINGVIEW] AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ERPBILLTOID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ERPBILLTOID
                  </Statement>
                  <Title>Create ErpBillToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_d5d44b6f-c0a6-40eb-b811-3e166063a419_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_d5d44b6f-c0a6-40eb-b811-3e166063a419_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPBILLTOINVOICEAGINGVIEW (Oracle)</Caption>
            <ActionData>
              <ActionId>d5d44b6f-c0a6-40eb-b811-3e166063a419</ActionId>
              <ActionTitle>ERPBILLTOINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE FORCE VIEW "SYSDBA"."ERPBILLTOINVOICEAGINGVIEW" AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ERPBILLTOID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ERPBILLTOID
                  </Statement>
                  <Title>Create ErpBillToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_5597d033-c4af-4bce-8f66-237cd9bb1021_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_5597d033-c4af-4bce-8f66-237cd9bb1021_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPSHIPTOINVOICEAGINGVIEW (MSSQL)</Caption>
            <ActionData>
              <ActionId>5597d033-c4af-4bce-8f66-237cd9bb1021</ActionId>
              <ActionTitle>ERPSHIPTOINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[sysdba].[ERPSHIPTOINVOICEAGINGVIEW]'))
                    DROP VIEW [sysdba].[ERPSHIPTOINVOICEAGINGVIEW]
                  </Statement>
                  <Title>Remove ErpShipToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
                <DbStatement>
                  <Statement>
                    CREATE VIEW [sysdba].[ERPSHIPTOINVOICEAGINGVIEW] AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ERPSHIPTOID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ERPSHIPTOID
                  </Statement>
                  <Title>Create ErpShipToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_70c6640e-c2c5-483b-88f8-c85d17881858_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_70c6640e-c2c5-483b-88f8-c85d17881858_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:ERPSHIPTOINVOICEAGINGVIEW (Oracle)</Caption>
            <ActionData>
              <ActionId>70c6640e-c2c5-483b-88f8-c85d17881858</ActionId>
              <ActionTitle>ERPSHIPTOINVOICEAGINGVIEW</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE FORCE VIEW "SYSDBA"."ERPSHIPTOINVOICEAGINGVIEW" AS
                    SELECT   COUNT(ERPINVOICEID) AS AGINGINVOICES, MAX(ERPINVOICEID) AS PRIMARYKEYID, DAYSLATECLASS, SUM(ERPTOTALBASEAMOUNT) AS TOTAL, ERPSHIPTOID,
                    CASE WHEN DAYSLATECLASS='120+' THEN 121 WHEN DAYSLATECLASS='91-120' THEN 91 WHEN DAYSLATECLASS='61-90' THEN 61 WHEN DAYSLATECLASS='31-60' THEN 31 WHEN DAYSLATECLASS='1-30' THEN 1 ELSE 0 END AS MAXDAYSLATE
                    FROM     sysdba.ERPINVOICEVIEW
                    GROUP BY DAYSLATECLASS, ERPSHIPTOID
                  </Statement>
                  <Title>Create ErpShipToInvoiceAging View</Title>
                  <ContinueOnError>false</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\SECPROFILE_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\SECPROFILE_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into SECPROFILE</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>SECPROFILE</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Table</SelectionType>
            <PrimaryKeyName>PROFILEID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>true</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\COUNTRYCODEMAPPING_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\COUNTRYCODEMAPPING_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into COUNTRYCODEMAPPING</Caption>
            <SelectedColumns>
              <string>ADDRESSFORMAT</string>
            </SelectedColumns>
            <ConflictRule>Overwrite</ConflictRule>
            <ReplacementRule>SpecificFields</ReplacementRule>
            <TableName>COUNTRYCODEMAPPING</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Table</SelectionType>
            <PrimaryKeyName>COUNTRYCODEMAPPINGID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\COUNTRYALIAS_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\COUNTRYALIAS_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into COUNTRYALIAS</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>COUNTRYALIAS</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Table</SelectionType>
            <PrimaryKeyName>COUNTRYALIASID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>true</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_83cf1d21-394d-4204-9c01-bf2119533626_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_83cf1d21-394d-4204-9c01-bf2119533626_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Alter SyncResult Column (Oracle)</Caption>
            <ActionData>
              <ActionId>83cf1d21-394d-4204-9c01-bf2119533626</ActionId>
              <ActionTitle>Alter SyncResult Column</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    ALTER TABLE SYNCRESULT ADD (TempColumn CLOB);
                    UPDATE SYNCRESULT SET TempColumn = ERRORMESSAGE, ERRORMESSAGE = NULL;
                    ALTER TABLE SYNCRESULT DROP COLUMN ERRORMESSAGE;
                    ALTER TABLE SYNCRESULT RENAME COLUMN TempColumn TO ERRORMESSAGE;
                  </Statement>
                  <Title>AlterSyncResult</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>true</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015K.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015K.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] SYSBOEOUTBOUNDTXN:AllTransactions (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015K</PluginId>
            <Name>AllTransactions</Name>
            <Family>SYSBOEOUTBOUNDTXN</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015L.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015L.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] TICKETACTIVITYRATE:AllTicketActivityRates (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015L</PluginId>
            <Name>AllTicketActivityRates</Name>
            <Family>TICKETACTIVITYRATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015M.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015M.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] DEFECTACTIVITYRATE:AllRates (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015M</PluginId>
            <Name>AllRates</Name>
            <Family>DEFECTACTIVITYRATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015N.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015N.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] AREACATEGORYISSUE:All (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015N</PluginId>
            <Name>All</Name>
            <Family>AREACATEGORYISSUE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015O.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015O.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] SALESORDER:All Sales Orders (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015O</PluginId>
            <Name>All Sales Orders</Name>
            <Family>SALESORDER</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015P.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015P.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] SALESORDER:My Sales Orders (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015P</PluginId>
            <Name>My Sales Orders</Name>
            <Family>SALESORDER</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015Q.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015Q.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] LITERATURE:All Literature Items (Infor 8.309)</Caption>
            <PluginId>pDEMOA00015Q</PluginId>
            <Name>All Literature Items</Name>
            <Family>LITERATURE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015R.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015R.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] ERPINVOICE:All Invoice (Infor 8.3)</Caption>
            <PluginId>pDEMOA00015R</PluginId>
            <Name>All Invoice</Name>
            <Family>ERPINVOICE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015S.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015S.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] ERPRECEIVABLE:ActiveReceivables (Infor 8.3)</Caption>
            <PluginId>pDEMOA00015S</PluginId>
            <Name>ActiveReceivables</Name>
            <Family>ERPRECEIVABLE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.309</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\LINKEDINCONFIGURATION_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\LINKEDINCONFIGURATION_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into LINKEDINCONFIGURATION</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>LINKEDINCONFIGURATION</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>IdList</SelectionType>
            <PrimaryKeyName>LINKEDINCONFIGURATIONID</PrimaryKeyName>
            <PrimaryKeyValues>
              <string>IM4LINKEDIN1</string>
            </PrimaryKeyValues>
            <PreCleanTable>false</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015T.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015T.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] TICKETACTIVITYRATE:AllTicketActivityRates (Infor 8.3010)</Caption>
            <PluginId>pDEMOA00015T</PluginId>
            <Name>AllTicketActivityRates</Name>
            <Family>TICKETACTIVITYRATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015U.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015U.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Group List (Infor 8.4)</Caption>
            <PluginId>pDEMOA00015U</PluginId>
            <Name>Group List</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015V.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015V.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] INTEGRATION:AllIntegrations (Infor 8.3010)</Caption>
            <PluginId>pDEMOA00015V</PluginId>
            <Name>AllIntegrations</Name>
            <Family>INTEGRATION</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.301</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.CustomSetting.AddCustomSettingAction, Sage.SalesLogix.BundleModel.BundleActions">
          <AddCustomSettingAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\AddCustomSettingAction\setting_cef46fd0-47ee-4921-bbf7-6ddf15df3740.xml</ItemId>
            <Url>\Actions\AddCustomSettingAction\setting_cef46fd0-47ee-4921-bbf7-6ddf15df3740.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Custom Setting:[ExchangeSync] Notify Members of Completion = True</Caption>
            <Validation>True or False</Validation>
            <Category>ExchangeSync</Category>
            <Description>Notify Members of Completion</Description>
            <DataType>True / False</DataType>
            <DataValue>True</DataValue>
            <VersionNumber>8.4</VersionNumber>
            <Id>cef46fd0-47ee-4921-bbf7-6ddf15df3740</Id>
          </AddCustomSettingAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015W.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015W.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] DEDUPRESULT:AllDeDupResults (Infor 8.4)</Caption>
            <PluginId>pDEMOA00015W</PluginId>
            <Name>AllDeDupResults</Name>
            <Family>DEDUPRESULT</Family>
            <PluginType>Group</PluginType>
            <Company>SalesLogix</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_d711cd3f-d765-48a8-8b0d-fc046d31c77f_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_d711cd3f-d765-48a8-8b0d-fc046d31c77f_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Alter BackOfficeMappingView (MSSQL)</Caption>
            <ActionData>
              <ActionId>d711cd3f-d765-48a8-8b0d-fc046d31c77f</ActionId>
              <ActionTitle>Alter BackOfficeMappingView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    ALTER VIEW BACKOFFICEMAPPINGVIEW AS
                    SELECT BO.BACKOFFICEID AS BOID, BM.*,BO.ISACTIVE AS ISBACKOFFICEACTIVE,BO.LOGICALID
                    FROM BACKOFFICE AS BO
                    INNER JOIN  BODMAPPING as BM
                    ON (BM.BACKOFFICEID = bo.BACKOFFICEID OR (bm.BACKOFFICEID = bo.STDBACKOFFICEID AND bm.ISCUSTOM = 'F'))  -- Set of all dependent Bod Mappings, Standard and Customized
                    WHERE bm.BODMAPPINGID not in
                    (SELECT BMC.STDBODMAPPINGID FROM BODMAPPING AS BMC
                    WHERE (BMC.BACKOFFICEID = bo.BACKOFFICEID) AND (BMC.ISCUSTOM = 'T') AND BMC.STDBODMAPPINGID is not null ) -- Eliminate set of standard Bod Mappings that have been customize
                  </Statement>
                  <Title>Alter BackOfficeMappingView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>true</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>MSSQL</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_f798c85e-71e3-4965-a285-726a6d8f04b7_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_f798c85e-71e3-4965-a285-726a6d8f04b7_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:Alter BackOfficeMappingView (Oracle)</Caption>
            <ActionData>
              <ActionId>f798c85e-71e3-4965-a285-726a6d8f04b7</ActionId>
              <ActionTitle>Alter BackOfficeMappingView</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>
                    CREATE OR REPLACE VIEW BACKOFFICEMAPPINGVIEW AS
                    SELECT BO.BACKOFFICEID AS BOID, BM.*,BO.ISACTIVE AS ISBACKOFFICEACTIVE,BO.LOGICALID
                    FROM BACKOFFICE AS BO
                    INNER JOIN  BODMAPPING as BM
                    ON (BM.BACKOFFICEID = bo.BACKOFFICEID OR (bm.BACKOFFICEID = bo.STDBACKOFFICEID AND bm.ISCUSTOM = 'F'))  -- Set of all dependent Bod Mappings, Standard and Customized
                    WHERE bm.BODMAPPINGID not in
                    (SELECT BMC.STDBODMAPPINGID FROM BODMAPPING AS BMC
                    WHERE (BMC.BACKOFFICEID = bo.BACKOFFICEID) AND (BMC.ISCUSTOM = 'T') AND BMC.STDBODMAPPINGID is not null ) -- Eliminate set of standard Bod Mappings that have been customize
                  </Statement>
                  <Title>Alter BackOfficeMappingView</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>true</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>Oracle</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_e0cd9e15-24ab-4a4f-9c64-dbd74ad7a199_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_e0cd9e15-24ab-4a4f-9c64-dbd74ad7a199_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:UpdateInforSorLocation (All)</Caption>
            <ActionData>
              <ActionId>e0cd9e15-24ab-4a4f-9c64-dbd74ad7a199</ActionId>
              <ActionTitle>UpdateInforSorLocation</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE BACKOFFICEACCTENTITY set LOCATION = NULL WHERE BACKOFFICEID = 'ICRMSR000001'</Statement>
                  <Title>UpdateInforSorLocation</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\MARKETOMAPFIELD_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\MARKETOMAPFIELD_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into MARKETOMAPFIELD</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>MARKETOMAPFIELD</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Table</SelectionType>
            <PrimaryKeyName>MARKETOMAPFIELDID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>true</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015X.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015X.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] ERPINVOICE:PartialPaid (Infor 8.4)</Caption>
            <PluginId>pDEMOA00015X</PluginId>
            <Name>PartialPaid</Name>
            <Family>ERPINVOICE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.InsertRecordsAction, Sage.SalesLogix.BundleModel.BundleActions">
          <InsertRecordsAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\Schema\InsertRecords\MARKETOENTITYMAP_Data.xml</ItemId>
            <Url>\Actions\Schema\InsertRecords\MARKETOENTITYMAP_Data.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Records into MARKETOENTITYMAP</Caption>
            <SelectedColumns />
            <ConflictRule>Skip</ConflictRule>
            <ReplacementRule>AllFields</ReplacementRule>
            <TableName>MARKETOENTITYMAP</TableName>
            <GenerateNewIds>false</GenerateNewIds>
            <SelectionType>Table</SelectionType>
            <PrimaryKeyName>MARKETOENTITYMAPID</PrimaryKeyName>
            <PrimaryKeyValues />
            <PreCleanTable>true</PreCleanTable>
          </InsertRecordsAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015Y.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015Y.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] MARKETOSESSIONLOG:All Session Log Entries</Caption>
            <PluginId>pDEMOA00015Y</PluginId>
            <Name>All Session Log Entries</Name>
            <Family>MARKETOSESSIONLOG</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA00015Z.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA00015Z.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] MARKETOLEAD:All Marketo Leads</Caption>
            <PluginId>pDEMOA00015Z</PluginId>
            <Name>All Marketo Leads</Name>
            <Family>MARKETOLEAD</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000160.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000160.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] DEFECTACTIVITYRATE:AllRates (Infor 8.4)</Caption>
            <PluginId>pDEMOA000160</PluginId>
            <Name>AllRates</Name>
            <Family>DEFECTACTIVITYRATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000161.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000161.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] TICKETACTIVITYRATE:AllTicketActivityRates (Infor 8.4)</Caption>
            <PluginId>pDEMOA000161</PluginId>
            <Name>AllTicketActivityRates</Name>
            <Family>TICKETACTIVITYRATE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000162.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000162.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] AREACATEGORYISSUE:All (Infor 8.4)</Caption>
            <PluginId>pDEMOA000162</PluginId>
            <Name>All</Name>
            <Family>AREACATEGORYISSUE</Family>
            <PluginType>Group</PluginType>
            <Company>Infor</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000J6.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000J6.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Marketo Data Type]</Caption>
            <PickListId>kDEMOA0000J6</PickListId>
            <PickListName>Marketo Data Type</PickListName>
            <ReplaceTargetList>true</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000JB.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000JB.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Marketo Field Type]</Caption>
            <PickListId>kDEMOA0000JB</PickListId>
            <PickListName>Marketo Field Type</PickListName>
            <ReplaceTargetList>true</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000JE.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000JE.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Marketo Run Schedule]</Caption>
            <PickListId>kDEMOA0000JE</PickListId>
            <PickListName>Marketo Run Schedule</PickListName>
            <ReplaceTargetList>true</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000163.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000163.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [Group] PERIOD:All Periods (INFOR 8.4)</Caption>
            <PluginId>pDEMOA000163</PluginId>
            <Name>All Periods</Name>
            <Family>PERIOD</Family>
            <PluginType>Group</PluginType>
            <Company>INFOR</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PickListAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PickListAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InsertPickList\kDEMOA0000JK.xml</ItemId>
            <Url>\Actions\InsertPickList\kDEMOA0000JK.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Insert Picklist [Marketo Sales Insight Tab]</Caption>
            <PickListId>kDEMOA0000JK</PickListId>
            <PickListName>Marketo Sales Insight Tab</PickListName>
            <ReplaceTargetList>true</ReplaceTargetList>
            <Skip>false</Skip>
          </PickListAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.PluginAction, Sage.SalesLogix.BundleModel.BundleActions">
          <PluginAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\InstallPlugin\pDEMOA000164.xml</ItemId>
            <Url>\Actions\InstallPlugin\pDEMOA000164.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Install Plugin [DashboardWidget] System:Group List (INFOR 8.4)</Caption>
            <PluginId>pDEMOA000164</PluginId>
            <Name>Group List</Name>
            <Family>System</Family>
            <PluginType>DashboardWidget</PluginType>
            <Company>INFOR</Company>
            <CompanyVersion>8.4</CompanyVersion>
          </PluginAction>
        </bundleItem>
        <bundleItem modelId="af988c91-97c8-4527-b072-e021c9e2cb1a" itemTypeName="Sage.SalesLogix.BundleModel.BundleActions.ExecuteSql.ExecuteSqlAction, Sage.SalesLogix.BundleModel.BundleActions">
          <ExecuteSqlAction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <ItemId>\Actions\ExecuteSqlAction\ex_90623652-2423-40c2-923a-e303ab155244_dml.xml</ItemId>
            <Url>\Actions\ExecuteSqlAction\ex_90623652-2423-40c2-923a-e303ab155244_dml.xml</Url>
            <BundleItemType>Action</BundleItemType>
            <Caption>Create Database Object Definition:UpdateGroupDisplayName (All)</Caption>
            <ActionData>
              <ActionId>90623652-2423-40c2-923a-e303ab155244</ActionId>
              <ActionTitle>UpdateGroupDisplayName</ActionTitle>
              <Statements>
                <DbStatement>
                  <Statement>UPDATE SYSDBA.PLUGIN SET DISPLAYNAME=NAME WHERE (TYPE=8 OR TYPE=23) AND (DISPLAYNAME IS NULL OR DISPLAYNAME='')</Statement>
                  <Title>UpdateGroupPluginDisplayName</Title>
                  <ContinueOnError>true</ContinueOnError>
                  <SplitOnSemiColon>false</SplitOnSemiColon>
                </DbStatement>
              </Statements>
              <DatabaseType>All</DatabaseType>
              <EncodingTarget>Both</EncodingTarget>
              <DbObjectType>Other</DbObjectType>
            </ActionData>
          </ExecuteSqlAction>
        </bundleItem>
      </children>
    </bundleItem>
  </bundleActionHierarchy>
  <itemsToDelete>
    <itemToDelete id="f960626f-6041-43ac-87cc-88604a8627cd" url="\Portal\SlxJobService\Triggers\GeocodeEveryFifteenMinutesIndefinitely.trigger.xml" />
  </itemsToDelete>
  <globalResources />
</BundleManifest>